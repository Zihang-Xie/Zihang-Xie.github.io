<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Code Projects of Sololearn</title>
    <link href="/2021/07/24/article-008/"/>
    <url>/2021/07/24/article-008/</url>
    
    <content type="html"><![CDATA[<h1 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h1><h2 id="Code-Projects"><a href="#Code-Projects" class="headerlink" title="Code Projects"></a>Code Projects</h2><h3 id="Transportation"><a href="#Transportation" class="headerlink" title="Transportation"></a>Transportation</h3><p>You are making a program for a bus service.<br>A bus can transport <strong>50</strong> passengers at once.<br>Given the number of passengers waiting in the bus station as input, you need to calculate and output how many empty seats the last bus will have.</p><p><strong>Sample Input:</strong></p><p>126</p><p><strong>Sample Output:</strong></p><p>24</p><p><strong>Explanation:</strong> The first bus will transport 50 passengers, leaving 126-50=76 in the station. The next one will leave 26 in the station, thus, the last bus will take all of the 26 passengers, having 50-26=<strong>24</strong> seats left empty.</p><blockquote><p><strong>Hint:</strong> The modulo operator % can help to determine the number of passengers for the last bus.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-comment">//your code goes here</span><br>    <span class="hljs-keyword">int</span> a,b;<br>    cin &gt;&gt; a;<br>    b = <span class="hljs-number">50</span> - a % <span class="hljs-number">50</span>;<br>    cout &lt;&lt; b &lt;&lt; endl;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Countdown"><a href="#Countdown" class="headerlink" title="Countdown"></a>Countdown</h3><p>You need to make a countdown app.<br>Given a number <strong>N</strong> as input, output numbers from N to 1 on separate lines.<br>Also, when the current countdown number is a multiple of 5, the app should output “Beep”.</p><p><strong>Sample Input:</strong><br>12</p><p><strong>Sample Output:</strong><br>12<br>11<br>10<br>Beep<br>9<br>8<br>7<br>6<br>5<br>Beep<br>4<br>3<br>2<br>1</p><blockquote><p><strong>Hint:</strong> You can use the modulo operator % to check if a number is a multiple of 5.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin &gt;&gt; n;<br>    <br>    <span class="hljs-comment">//your code goes here</span><br>    <span class="hljs-keyword">while</span> (n&gt;<span class="hljs-number">0</span>) &#123;<br>    cout &lt;&lt; n &lt;&lt; endl;<br>    <span class="hljs-keyword">if</span> (n%<span class="hljs-number">5</span> == <span class="hljs-number">0</span>)<br>    cout &lt;&lt; <span class="hljs-string">&quot;Beep&quot;</span> &lt;&lt; endl;<br>    n--;<br>    &#125;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Ticket-Office"><a href="#Ticket-Office" class="headerlink" title="Ticket Office"></a>Ticket Office</h3><p>You are working on a ticketing system. A ticket costs $10.<br>The office is running a discount campaign: each group of 5 people is getting a discount, which is determined by the age of the youngest person in the group.<br>You need to create a program that takes the ages of all 5 people as input and outputs the total price of the tickets.</p><p><strong>Sample Input:</strong><br>55<br>28<br>15<br>38<br>63</p><p><strong>Sample Output:</strong><br>42.5</p><p>The youngest age is 15, so the group gets a <strong>15%</strong> discount from the total price, which is <strong>$50 - 15% = $42.5</strong></p><blockquote><p>The given code is declaring an array of 5 elements and taking them from input using a loop.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> ages[<span class="hljs-number">5</span>];<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; ++i) &#123;<br>        cin &gt;&gt; ages[i];<br>    &#125;<br>    <span class="hljs-comment">//your code goes here</span><br>    <span class="hljs-keyword">int</span> youngest = ages[<span class="hljs-number">0</span>];<br> <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>; ++i) &#123;<br>        <span class="hljs-keyword">if</span> (ages[i] &lt; youngest)&#123;<br>        youngest = ages[i];<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">double</span> price = <span class="hljs-number">50</span> - <span class="hljs-number">50.0</span> * youngest / <span class="hljs-number">100</span>;<br>    <br>    cout &lt;&lt; price &lt;&lt; endl;<br>    <br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Palindrome-Numbers"><a href="#Palindrome-Numbers" class="headerlink" title="Palindrome Numbers"></a>Palindrome Numbers</h3><p>A <strong>palindromic</strong> number is a number (such as 626) that remains the same when its digits are reversed.<br>Write a function that returns <strong>true</strong> if a given number is a palindrome, and <strong>false</strong>, if it is not.<br>Complete the given function, so that the code in main works and results in the expected output.</p><p><strong>Sample Input:</strong><br>13431</p><p><strong>Sample Output:</strong><br>13431 is a palindrome</p><blockquote><p>To check if a number is palindrome, you need to reverse it and compare with the original one.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">isPalindrome</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<br>    <span class="hljs-comment">//complete the function</span><br>    <span class="hljs-keyword">int</span> y=<span class="hljs-number">0</span>,z=x;<br>    <span class="hljs-keyword">while</span>(z)&#123;<br>    y*=<span class="hljs-number">10</span>;<br>    y+=z%<span class="hljs-number">10</span>;<br>    z/=<span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">if</span> (y==x)<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    cin &gt;&gt;n;<br>    <br>    <span class="hljs-keyword">if</span>(<span class="hljs-built_in">isPalindrome</span>(n)) &#123;<br>        cout &lt;&lt;n&lt;&lt;<span class="hljs-string">&quot; is a palindrome&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        cout &lt;&lt; n&lt;&lt;<span class="hljs-string">&quot; is NOT a palindrome&quot;</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Queue-Management-Part-1"><a href="#Queue-Management-Part-1" class="headerlink" title="Queue Management - Part 1"></a>Queue Management - Part 1</h3><p>You are working on a Queue management system and need to create the class to hold the queue data, which are customer IDs (integers).<br>You make a <strong>Queue</strong> class, which has a <strong>size</strong> attribute, and an <strong>array</strong>, to hold the data of the queue.<br>The class has a <strong>remove</strong>() method to remove the front item of the queue, a <strong>print</strong>() method to output the queue.</p><p>You need to create an <strong>add</strong>() method for the Queue class, that will take an item and add it to the end of the queue.<br>The code needs to be fully working, so that the Queue declaration and manipulation code in main() works.</p><blockquote><p>Do not forget to increment the <strong>size</strong> after adding the item to the array.<br>Read the code carefully, before making any changes.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std; <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Queue</span> &#123;</span> <br><span class="hljs-keyword">int</span> size; <br><span class="hljs-keyword">int</span>* queue; <br><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">Queue</span>() &#123;<br>size = <span class="hljs-number">0</span>;<br>queue = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">100</span>];<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">remove</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">else</span> &#123; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size - <span class="hljs-number">1</span>; i++) &#123; <br>queue[i] = queue[i + <span class="hljs-number">1</span>]; <br>&#125; <br>size--; <br>&#125; <br>&#125; <br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size; i++) &#123; <br>cout&lt;&lt;queue[i]&lt;&lt;<span class="hljs-string">&quot; &lt;- &quot;</span>;<br>&#125; <br>cout &lt;&lt;endl;<br>&#125;<br><span class="hljs-comment">//your code goes here</span><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> num)</span></span>&#123;<br>size++;<br>queue[size - <span class="hljs-number">1</span>] = num;<br>&#125;<br>&#125;; <br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123; <br>Queue q; <br>q.<span class="hljs-built_in">add</span>(<span class="hljs-number">42</span>); q.<span class="hljs-built_in">add</span>(<span class="hljs-number">2</span>); q.<span class="hljs-built_in">add</span>(<span class="hljs-number">8</span>); q.<span class="hljs-built_in">add</span>(<span class="hljs-number">1</span>); <br>q.<span class="hljs-built_in">print</span>();<br>q.<span class="hljs-built_in">remove</span>(); <br>q.<span class="hljs-built_in">add</span>(<span class="hljs-number">128</span>); <br>q.<span class="hljs-built_in">print</span>(); <br>q.<span class="hljs-built_in">remove</span>(); <br>q.<span class="hljs-built_in">remove</span>(); <br>q.<span class="hljs-built_in">print</span>(); <br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125; <br></code></pre></div></td></tr></table></figure><hr><h3 id="Queue-Management-Part-2"><a href="#Queue-Management-Part-2" class="headerlink" title="Queue Management - Part 2"></a>Queue Management - Part 2</h3><p>We continue to develop our Queue management system that we made in the previous module.<br>You are asked to add a new functionality: adding two queues together. The result should be a new queue, where the elements of the first queue come first, followed by the second queue’s elements.</p><p>Given the <strong>Queue</strong> class, overload the + operator, so that the code in main works and successfully adds two queues.</p><blockquote><p>The overloaded operator should return a new <strong>Queue</strong> object, which contains the elements of the first queue, followed by the elements of the second queue.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std; <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Queue</span> &#123;</span> <br><span class="hljs-keyword">int</span> size; <br><span class="hljs-keyword">int</span>* queue; <br><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">Queue</span>() &#123; <br>size = <span class="hljs-number">0</span>;<br>queue = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">100</span>];<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> data)</span> </span>&#123; <br>queue[size] = data; <br>size++;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">remove</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">else</span> &#123; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size - <span class="hljs-number">1</span>; i++) &#123; <br>queue[i] = queue[i + <span class="hljs-number">1</span>]; <br>&#125; <br>size--; <br>&#125; <br>&#125; <br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size; i++) &#123; <br>cout&lt;&lt;queue[i]&lt;&lt;<span class="hljs-string">&quot; &lt;- &quot;</span>;<br>&#125; <br>cout &lt;&lt; endl;<br>&#125;<br><span class="hljs-comment">//your code goes here</span><br>Queue <span class="hljs-keyword">operator</span>+(Queue &amp;q2)&#123;<br>Queue res;<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-keyword">this</span>-&gt;size; i++)&#123;<br>res.queue[i] = <span class="hljs-keyword">this</span>-&gt;queue[i];<br>res.size++;<br>&#125;<br>        <br><span class="hljs-comment">/* test code</span><br><span class="hljs-comment"> * res.queue[res.size] = q2.queue[0];</span><br><span class="hljs-comment"> * res.size ++;</span><br><span class="hljs-comment"> * res.queue[res.size] = q2.queue[1];</span><br><span class="hljs-comment"> * res.size ++;</span><br><span class="hljs-comment"> * res.queue[res.size] = q2.queue[2];</span><br><span class="hljs-comment"> * res.size ++;</span><br><span class="hljs-comment"> * res.queue[res.size] = q2.queue[3];</span><br><span class="hljs-comment"> * res.size ++;</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; q2.size; j++)&#123;<br>res.queue[res.size] = q2.queue[j];<br>res.size++;<br>&#125;<br><br><span class="hljs-keyword">return</span> res;<br>&#125;<br>&#125;; <br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123; <br>Queue q1;<br>q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">42</span>); q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">2</span>); q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">8</span>);  q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">1</span>);<br>Queue q2;<br>q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">3</span>); q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">66</span>); q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">128</span>);  q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">5</span>);<br>Queue q3 = q1+q2;<br>q3.<span class="hljs-built_in">print</span>();<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125; <br><br></code></pre></div></td></tr></table></figure><hr><h3 id="Queue-Management-Part-3"><a href="#Queue-Management-Part-3" class="headerlink" title="Queue Management - Part 3"></a>Queue Management - Part 3</h3><p>Your <strong>Queue</strong> class is up and working in a customer service company. The company opens up a new branch and asks you to make another version of the Queue for them. The only difference is the way the Queue is displayed: each number on a new line.</p><p>You decide to create a new class called <strong>Queue2</strong>, which is derived from the <strong>Queue</strong> class and overrides the <strong>print</strong>() method, outputting each element of the queue on a new line.</p><blockquote><p>Do not forget to change the access specifier of the <strong>Queue</strong> members, as they won’t be inherited if private.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std; <br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Queue</span> &#123;</span> <br><span class="hljs-keyword">int</span> size; <br><span class="hljs-keyword">int</span>* queue; <br><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">Queue</span>() &#123; <br>size = <span class="hljs-number">0</span>;<br>queue = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">100</span>];<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> data)</span> </span>&#123; <br>queue[size] = data; <br>size++;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">remove</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">else</span> &#123; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size - <span class="hljs-number">1</span>; i++) &#123; <br>queue[i] = queue[i + <span class="hljs-number">1</span>]; <br>&#125; <br>size--; <br>&#125; <br>&#125; <br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size; i++) &#123; <br>cout&lt;&lt;queue[i]&lt;&lt;<span class="hljs-string">&quot; &lt;- &quot;</span>;<br>&#125; <br>cout &lt;&lt; endl;<br>&#125;<br>Queue <span class="hljs-keyword">operator</span>+(Queue &amp;obj) &#123;<br>        Queue res;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-keyword">this</span>-&gt;size;i++) &#123;<br>            res.<span class="hljs-built_in">add</span>(<span class="hljs-keyword">this</span>-&gt;queue[i]);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;obj.size;i++) &#123;<br>            res.<span class="hljs-built_in">add</span>(obj.queue[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> res; <br>    &#125;<br>&#125;; <br><br><span class="hljs-comment">//your code goes here</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Queue2</span>:</span> <span class="hljs-keyword">public</span> Queue &#123;<br><span class="hljs-keyword">int</span> size; <br><span class="hljs-keyword">int</span>* queue; <br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">Queue2</span>() &#123;<br>size = <span class="hljs-number">0</span>;<br>queue = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[<span class="hljs-number">100</span>];<br>&#125;;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(<span class="hljs-keyword">int</span> data)</span> </span>&#123; <br>queue[size] = data; <br>size++;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size; i++) &#123; <br>cout&lt;&lt;queue[i]&lt;&lt;endl;<br>&#125; <br>&#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123; <br>Queue q1; <br>q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">42</span>); q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">2</span>); q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">8</span>);  q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">1</span>);<br>    q1.<span class="hljs-built_in">print</span>();<br>    <br>Queue2 q2;<br>q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">3</span>); q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">66</span>); q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">128</span>);  q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">5</span>);q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">111</span>);q2.<span class="hljs-built_in">add</span>(<span class="hljs-number">77890</span>);<br>q2.<span class="hljs-built_in">print</span>();<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125; <br></code></pre></div></td></tr></table></figure><hr><h3 id="Queue-Management-Part-4"><a href="#Queue-Management-Part-4" class="headerlink" title="Queue Management - Part 4"></a>Queue Management - Part 4</h3><p>It’s time to update your Queue management system. The previous version supports only integer numbers and we need to support more types, such as strings, to store customer names in the queue.</p><p>Transform the given <strong>Queue</strong> class to a class template, which can work with different data types.</p><blockquote><p>The code in main declares two Queues, one for integers, and another one for strings.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std; <br><br><span class="hljs-comment">// The original code:</span><br><span class="hljs-comment">/* class Queue &#123; </span><br><span class="hljs-comment"> *  int size; </span><br><span class="hljs-comment"> *  int* queue; </span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * public:</span><br><span class="hljs-comment"> * Queue() &#123; </span><br><span class="hljs-comment"> * size = 0;</span><br><span class="hljs-comment"> * queue = new int[100];</span><br><span class="hljs-comment"> * &#125;</span><br><span class="hljs-comment"> * void add(int data) &#123; </span><br><span class="hljs-comment"> * queue[size] = data; </span><br><span class="hljs-comment"> * size++;</span><br><span class="hljs-comment"> * &#125;</span><br><span class="hljs-comment"> *  void remove() &#123; </span><br><span class="hljs-comment"> * if (size == 0) &#123; </span><br><span class="hljs-comment"> *  cout &lt;&lt; &quot;Queue is empty&quot;&lt;&lt;endl; </span><br><span class="hljs-comment"> * return; </span><br><span class="hljs-comment"> * &#125; </span><br><span class="hljs-comment"> * else &#123; </span><br><span class="hljs-comment"> * for (int i = 0; i &lt; size - 1; i++) &#123; </span><br><span class="hljs-comment"> * queue[i] = queue[i + 1]; </span><br><span class="hljs-comment"> * &#125; </span><br><span class="hljs-comment"> * size--; </span><br><span class="hljs-comment"> * &#125; </span><br><span class="hljs-comment"> * &#125; </span><br><span class="hljs-comment"> * void print() &#123; </span><br><span class="hljs-comment"> * if (size == 0) &#123; </span><br><span class="hljs-comment"> * cout &lt;&lt; &quot;Queue is empty&quot;&lt;&lt;endl; </span><br><span class="hljs-comment"> * return; </span><br><span class="hljs-comment"> * &#125; </span><br><span class="hljs-comment"> * for (int i = 0; i &lt; size; i++) &#123; </span><br><span class="hljs-comment"> * cout&lt;&lt;queue[i]&lt;&lt;&quot; &lt;- &quot;;</span><br><span class="hljs-comment"> * &#125; </span><br><span class="hljs-comment"> * cout &lt;&lt; endl;</span><br><span class="hljs-comment"> * &#125;</span><br><span class="hljs-comment"> * Queue operator+(Queue &amp;obj) &#123;</span><br><span class="hljs-comment"> *         Queue res;</span><br><span class="hljs-comment"> *       for(int i=0;i&lt;this-&gt;size;i++) &#123;</span><br><span class="hljs-comment"> *           res.add(this-&gt;queue[i]);</span><br><span class="hljs-comment"> *       &#125;</span><br><span class="hljs-comment"> *       for(int i=0;i&lt;obj.size;i++) &#123;</span><br><span class="hljs-comment"> *           res.add(obj.queue[i]);</span><br><span class="hljs-comment"> *       &#125;</span><br><span class="hljs-comment"> *       return res; </span><br><span class="hljs-comment"> *   &#125;</span><br><span class="hljs-comment"> * &#125;;</span><br><span class="hljs-comment"> */</span><br><br><span class="hljs-comment">//your code goes here</span><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">T</span>&gt;</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Queue</span> &#123;</span> <br><span class="hljs-keyword">int</span> size; <br>T* queue; <br><br><span class="hljs-keyword">public</span>:<br><span class="hljs-built_in">Queue</span>() &#123; <br>size = <span class="hljs-number">0</span>;<br>queue = <span class="hljs-keyword">new</span> T[<span class="hljs-number">100</span>];<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">add</span><span class="hljs-params">(T data)</span> </span>&#123; <br>queue[size] = data; <br>size++;<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">remove</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">else</span> &#123; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size - <span class="hljs-number">1</span>; i++) &#123; <br>queue[i] = queue[i + <span class="hljs-number">1</span>]; <br>&#125; <br>size--; <br>&#125; <br>&#125; <br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">print</span><span class="hljs-params">()</span> </span>&#123; <br><span class="hljs-keyword">if</span> (size == <span class="hljs-number">0</span>) &#123; <br>cout &lt;&lt; <span class="hljs-string">&quot;Queue is empty&quot;</span>&lt;&lt;endl; <br><span class="hljs-keyword">return</span>; <br>&#125; <br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; size; i++) &#123; <br>cout&lt;&lt;queue[i]&lt;&lt;<span class="hljs-string">&quot; &lt;- &quot;</span>;<br>&#125; <br>cout &lt;&lt; endl;<br>&#125;<br>Queue <span class="hljs-keyword">operator</span>+(Queue &amp;obj) &#123;<br>        Queue res;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-keyword">this</span>-&gt;size;i++) &#123;<br>            res.<span class="hljs-built_in">add</span>(<span class="hljs-keyword">this</span>-&gt;queue[i]);<br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;obj.size;i++) &#123;<br>            res.<span class="hljs-built_in">add</span>(obj.queue[i]);<br>        &#125;<br>        <span class="hljs-keyword">return</span> res; <br>    &#125;<br>&#125;; <br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123; <br>Queue&lt;<span class="hljs-keyword">int</span>&gt; q1; <br>q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">42</span>); q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">2</span>); q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">8</span>);  q1.<span class="hljs-built_in">add</span>(<span class="hljs-number">1</span>);<br>q1.<span class="hljs-built_in">print</span>();<br>    <br>Queue&lt;string&gt; q2;<br>q2.<span class="hljs-built_in">add</span>(<span class="hljs-string">&quot;Dave&quot;</span>); q2.<span class="hljs-built_in">add</span>(<span class="hljs-string">&quot;John&quot;</span>); q2.<span class="hljs-built_in">add</span>(<span class="hljs-string">&quot;Amy&quot;</span>);<br>q2.<span class="hljs-built_in">print</span>();<br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125; <br></code></pre></div></td></tr></table></figure><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="Code-Projects-1"><a href="#Code-Projects-1" class="headerlink" title="Code Projects"></a>Code Projects</h2><h3 id="Time-Converter"><a href="#Time-Converter" class="headerlink" title="Time Converter"></a>Time Converter</h3><p>You need a program to convert days to seconds.<br>The given code takes the amount of days as input. Complete the code to convert it to seconds and output the result.</p><p><strong>Sample Input:</strong><br>12</p><p><strong>Sample Output:</strong><br>1036800</p><blockquote><p>Explanation: 12 days are 12<em><strong>24</strong> = 288 hours, which are 288**</em>60** = 17280 minutes, which are 17280*<strong>60</strong> = <strong>1036800</strong> seconds.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span> </span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner scanner = <span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">int</span> days = scanner.nextInt();<br><br><span class="hljs-comment">//your code goes here</span><br><span class="hljs-keyword">int</span> seconds = days * <span class="hljs-number">24</span> * <span class="hljs-number">3600</span>;<br>System.out.println(seconds);<br><br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Loan-Calculator"><a href="#Loan-Calculator" class="headerlink" title="Loan Calculator"></a>Loan Calculator</h3><p>You take a loan from a friend and need to calculate how much you will owe him after 3 months.<br>You are going to pay him back 10% of the remaining loan amount each month.<br>Create a program that takes the loan amount as input, calculates and outputs the remaining amount after 3 months.</p><p><strong>Sample Input:</strong><br>20000</p><p><strong>Sample Output:</strong><br>10628</p><p>Here is the monthly payment schedule:<br><strong>Month 1</strong><br>Payment: 10% of 20000 = 2000<br>Remaining amount: 18000<br><strong>Month 2</strong><br>Payment: 10% of 18000 = 1800<br>Remaining amount: 16200<br><strong>Month 3:</strong><br>Payment: 10% of 16200 = 1620<br>Remaining amount: <strong>14580</strong></p><blockquote><p>Use a loop to calculate the payment and remaining amounts for each month.<br>Also, use <strong>integers</strong> for amounts.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner scanner = <span class="hljs-keyword">new</span> Scanner(System.in);<br><span class="hljs-keyword">int</span> amount = scanner.nextInt();<br><span class="hljs-comment">//your code goes here</span><br><span class="hljs-keyword">int</span> month = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">for</span> (month = <span class="hljs-number">1</span>; month &lt;= <span class="hljs-number">3</span>; month++)&#123;<br>amount *= <span class="hljs-number">0.9</span>;<br>&#125;<br>System.out.println(amount);<br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Reverse-a-String"><a href="#Reverse-a-String" class="headerlink" title="Reverse a String"></a>Reverse a String</h3><p>Write a program to take a string as input and output its reverse.<br>The given code takes a string as input and converts it into a <strong>char</strong> array, which contains letters of the string as its elements.</p><p><strong>Sample Input:</strong><br>hello there</p><p><strong>Sample Output:</strong><br>ereht olleh</p><blockquote><p>You can loop through the char array, starting from the end, using <strong>arr.length</strong> to get the size of the array.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span></span><br><span class="hljs-class"></span>&#123;<br><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>Scanner scanner = <span class="hljs-keyword">new</span> Scanner(System.in);<br>String text = scanner.nextLine();<br><span class="hljs-keyword">char</span>[] arr = text.toCharArray();<br><br><span class="hljs-comment">//your code goes here</span><br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; arr.length / <span class="hljs-number">2</span>; i++)&#123;<br><span class="hljs-keyword">char</span> temp = arr[i];<br>arr[i] = arr[arr.length - <span class="hljs-number">1</span> - i];<br>arr[arr.length - <span class="hljs-number">1</span> - i] = temp;<br>&#125;<br>System.out.println(arr);<br>&#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Binary-Converter"><a href="#Binary-Converter" class="headerlink" title="Binary Converter"></a>Binary Converter</h3><p>The binary numeric system uses only two digits: 0 and 1. Computers operate in binary, meaning they store data and perform calculations using only zeros and ones.</p><p>You need to make a program to convert integer numbers to their binary representation.<br>Create a <strong>Converter</strong> class with a static <strong>toBinary()</strong> method, which returns the binary version of its argument.<br>The code in main takes a number as input and calls the corresponding static method. Make sure the code works as expected.</p><p><strong>Sample Input:</strong><br>42</p><p><strong>Sample Output:</strong><br>101010</p><p>You can use the following code to convert a number to binary:</p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java">String binary=<span class="hljs-string">&quot;&quot;</span>;<br><span class="hljs-keyword">while</span>(num &gt; <span class="hljs-number">0</span>) &#123;<br>   binary = (num%<span class="hljs-number">2</span>)+binary;<br>   num /= <span class="hljs-number">2</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><blockquote><p>The code above uses a loop to convert <strong>num</strong> to binary and stores the result in the <strong>binary</strong> String.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-comment">//your code goes here</span><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Converter</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">toBinary</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;<br>        String binary = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">while</span>(x &gt; <span class="hljs-number">0</span>)&#123;<br>            binary = (x % <span class="hljs-number">2</span>) + binary;<br>            x /= <span class="hljs-number">2</span>;<br>        &#125;<br>        <span class="hljs-keyword">return</span> binary;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[ ] args)</span> </span>&#123;<br>        Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);<br>        <span class="hljs-keyword">int</span> x = sc.nextInt();<br>        System.out.print(Converter.toBinary(x));<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Shapes"><a href="#Shapes" class="headerlink" title="Shapes"></a>Shapes</h3><p>You are working on a graphical app, which includes multiple different shapes.<br>The given code declares a base <strong>Shape</strong> class with an abstract <strong>area</strong>() method and a <strong>width</strong> attribute.<br>You need to create two <strong>Shape</strong> subclasses, <strong>Square</strong> and <strong>Circle</strong>, which initialize the width attribute using their constructor, and define their <strong>area</strong>() methods.<br>The <strong>area</strong>() for the <strong>Square</strong> class should output the area of the square (the square of the width), while for the <strong>Circle</strong>, it should output the area of the given circle (PI*width*width).<br>The code in main creates two objects with the given user input and calls the area() methods.</p><p><strong>Sample Input:</strong><br>5<br>2</p><p><strong>Sample Output:</strong><br>25<br>12.566370614359172</p><p>The area of the square is 5*5=<strong>25</strong>, while the area of the circle is PI*2*2=<strong>12.566370614359172</strong></p><blockquote><p>Use the <strong>Math.PI</strong> constant for the area calculation of the circle.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.Scanner;<br><br><span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Shape</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> width;<br>    <span class="hljs-function"><span class="hljs-keyword">abstract</span> <span class="hljs-keyword">void</span> <span class="hljs-title">area</span><span class="hljs-params">()</span></span>;<br>&#125;<br><br><span class="hljs-comment">//your code goes here</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Square</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Shape</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Square</span><span class="hljs-params">(<span class="hljs-keyword">int</span> width)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.width = width;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">area</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> area = width * width;<br>        System.out.println(area);<br>    &#125;<br>&#125;<br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Circle</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Shape</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Circle</span><span class="hljs-params">(<span class="hljs-keyword">int</span> width)</span> </span>&#123;<br>        <span class="hljs-keyword">this</span>.width = width;<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">area</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">double</span> area = Math.PI * width * width;<br>        System.out.println(area);<br>    &#125;<br>&#125;<br><br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[ ] args)</span> </span>&#123;<br>        Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);<br>        <span class="hljs-keyword">int</span> x = sc.nextInt();<br>        <span class="hljs-keyword">int</span> y = sc.nextInt();<br>        <br>        Square a = <span class="hljs-keyword">new</span> Square(x);<br>        Circle b = <span class="hljs-keyword">new</span> Circle(y);<br>        a.area();<br>        b.area();<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Bowling-Game"><a href="#Bowling-Game" class="headerlink" title="Bowling Game"></a>Bowling Game</h3><p>You are creating a bowling game!<br>The given code declares a <strong>Bowling</strong> class with its constructor and <strong>addPlayer</strong>() method.<br>Each player of the game has a name and points, and are stored in the players <strong>HashMap</strong>.<br>The code in main takes 3 players data as input and adds them to the game.<br>You need to add a <strong>getWinner</strong>() method to the class, which calculates and outputs the name of the player with the maximum points.</p><p><strong>Sample Input:</strong><br>Dave 42<br>Amy 103<br>Rob 64</p><p><strong>Sample Output:</strong><br>Amy</p><blockquote><p>You need to iterate through the HashMap to find the element with the maximum points and output its corresponding key.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight java"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.util.*; <br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Bowling</span> </span>&#123;<br>    HashMap&lt;String, Integer&gt; players;<br>    Bowling() &#123;<br>        players = <span class="hljs-keyword">new</span> HashMap&lt;String, Integer&gt;();<br>    &#125;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">addPlayer</span><span class="hljs-params">(String name, <span class="hljs-keyword">int</span> p)</span> </span>&#123;<br>        players.put(name, p);<br>    &#125;<br>    <span class="hljs-comment">//your code goes here</span><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">getWinner</span><span class="hljs-params">()</span> </span>&#123;<br>        String max_name = <span class="hljs-string">&quot;&quot;</span>;<br>        <span class="hljs-keyword">int</span> max = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (String name_0 : players.keySet()) &#123;<br>            <span class="hljs-keyword">if</span> (players.get(name_0) &gt; max) &#123;<br>                max = players.get(name_0);<br>                max_name = name_0;<br>            &#125;<br>        &#125;<br>        System.out.println(max_name);<br>    &#125;<br>    <br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Program</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[ ] args)</span> </span>&#123;<br>        Bowling game = <span class="hljs-keyword">new</span> Bowling();<br>        Scanner sc = <span class="hljs-keyword">new</span> Scanner(System.in);<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++) &#123;<br>            String input = sc.nextLine();<br>            String[] values = input.split(<span class="hljs-string">&quot; &quot;</span>);<br>            String name = values[<span class="hljs-number">0</span>];<br>            <span class="hljs-keyword">int</span> points = Integer.parseInt(values[<span class="hljs-number">1</span>]);<br>            game.addPlayer(name, points);<br>        &#125;<br>        game.getWinner();<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><h2 id="Code-Projects-2"><a href="#Code-Projects-2" class="headerlink" title="Code Projects"></a>Code Projects</h2><h3 id="Trip-Planner"><a href="#Trip-Planner" class="headerlink" title="Trip Planner"></a>Trip Planner</h3><p>You need to plan a road trip. You are traveling at an average speed of <strong>40 miles an hour</strong>.<br>Given a distance in miles as input (the code to take input is already present), output to the console the time it will take you to cover it <strong>in minutes</strong>.</p><p><strong>Sample Input:</strong><br>150</p><p><strong>Sample Output:</strong><br>225</p><blockquote><p><strong>Explanation</strong>: It will take 150/40 = 3.75 hours to cover the distance, which is equivalent to 3.75*60 = <strong>225</strong> minutes.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> distance = <span class="hljs-built_in">parseInt</span>(readLine(), <span class="hljs-number">10</span>);<br>    <span class="hljs-comment">//your code goes here</span><br>    <span class="hljs-keyword">var</span> minute = distance * <span class="hljs-number">60</span> / <span class="hljs-number">40</span>;<br>    <span class="hljs-built_in">console</span>.log(minute );<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="The-Snail-in-the-Well"><a href="#The-Snail-in-the-Well" class="headerlink" title="The Snail in the Well"></a>The Snail in the Well</h3><p>The snail climbs up 7 feet each day and slips back 2 feet each night.<br>How many days will it take the snail to get out of a well with the given depth?</p><p><strong>Sample Input:</strong><br>31</p><p><strong>Sample Output:</strong><br>6</p><p><strong>Explanation</strong>: Let’s break down the distance the snail covers each day:<br>Day 1: 7-2=5<br>Day 2: 5+7-2=10<br>Day 3: 10+7-2=15<br>Day 4: 15+7-2=20<br>Day 5: 20+7-2=25<br>Day 6: 25+7=32<br>So, on Day 6 the snail will reach 32 feet and get out of the well at day, without slipping back that night.</p><blockquote><p><strong>Hint</strong>: You can use a loop to calculate the distance the snail covers each day, and break the loop when it reaches the desired distance.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> depth = <span class="hljs-built_in">parseInt</span>(readLine(), <span class="hljs-number">10</span>);<br>    <span class="hljs-comment">//your code goes here</span><br>    <span class="hljs-keyword">var</span> distance = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">var</span> day = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (distance &lt; depth) &#123;<br>        day = day + <span class="hljs-number">1</span>;<br>        distance += <span class="hljs-number">7</span>;<br>        <span class="hljs-keyword">if</span> (distance &lt; depth) &#123;<br>            distance -= <span class="hljs-number">2</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-built_in">console</span>.log(day);<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Currency-Converter"><a href="#Currency-Converter" class="headerlink" title="Currency Converter"></a>Currency Converter</h3><p>You are making a currency converter app.<br>Create a function called <strong>convert</strong>, which takes two parameters: the amount to convert, and the rate, and returns the resulting amount.<br>The code to take the parameters as input and call the function is already present in the Playground.<br>Create the function to make the code work.</p><p><strong>Sample Input:</strong><br>100<br>1.1</p><p><strong>Sample Output:</strong><br>110</p><blockquote><p>Converting 100 at the rate of 1.1 is equal to 100*1.1 = <strong>110</strong>.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> amount = <span class="hljs-built_in">parseFloat</span>(readLine(), <span class="hljs-number">10</span>);<br>    <span class="hljs-keyword">var</span> rate = <span class="hljs-built_in">parseFloat</span>(readLine(), <span class="hljs-number">10</span>);<br>    <br>    <span class="hljs-built_in">console</span>.log(convert(amount, rate));<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">convert</span>(<span class="hljs-params">amount, rate</span>) </span>&#123;<br>    <span class="hljs-keyword">return</span> amount * rate;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Contact-Manager"><a href="#Contact-Manager" class="headerlink" title="Contact Manager"></a>Contact Manager</h3><p>You are working on a Contact Manager app.<br>You have created the <strong>contact</strong> object constructor, which has two arguments, name and number.<br>You need to add a print() method to the object, which will output the contact data to the console in the following format: <strong>name: number</strong><br>The given code declares two objects and calls their <strong>print</strong>() methods. Complete the code by defining the <strong>print()</strong> method for the objects.</p><blockquote><p>Notice the space after the colon, when outputting the contact data.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">contact</span>(<span class="hljs-params">name, number</span>) </span>&#123;<br>    <span class="hljs-built_in">this</span>.name = name;<br>    <span class="hljs-built_in">this</span>.number = number;<br>    <span class="hljs-built_in">this</span>.print = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">name, number</span>)</span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-built_in">console</span>.log(<span class="hljs-built_in">this</span>.name + <span class="hljs-string">&quot;: &quot;</span> + <span class="hljs-built_in">this</span>.number);<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> a = <span class="hljs-keyword">new</span> contact(<span class="hljs-string">&quot;David&quot;</span>, <span class="hljs-number">12345</span>);<br><span class="hljs-keyword">var</span> b = <span class="hljs-keyword">new</span> contact(<span class="hljs-string">&quot;Amy&quot;</span>, <span class="hljs-number">987654321</span>);<br>a.print();<br>b.print();<br></code></pre></div></td></tr></table></figure><hr><h3 id="Store-Manager"><a href="#Store-Manager" class="headerlink" title="Store Manager"></a>Store Manager</h3><p>You are working on a Store Manager program, which stores the prices in an array.<br>You need to add functionality to increase the prices by the given amount.<br>The <strong>increase</strong> variable is taken from user input. You need to increase all the prices in the given array by that amount and output to the console the resulting array.</p><blockquote><p>Use a loop to iterate through the array and increase all items.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">main</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> increase = <span class="hljs-built_in">parseInt</span>(readLine(), <span class="hljs-number">10</span>);<br>    <span class="hljs-keyword">var</span> prices = [<span class="hljs-number">98.99</span>, <span class="hljs-number">15.2</span>, <span class="hljs-number">20</span>, <span class="hljs-number">1026</span>];<br>    <br>    <span class="hljs-comment">//your code goes here</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; prices.length; i++) &#123;<br>        prices[i] += increase;<br>    &#125;<br><br>    <span class="hljs-built_in">console</span>.log(prices);<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Words"><a href="#Words" class="headerlink" title="Words"></a>Words</h3><p>You are making a text encryptor. It should take multiple words and output a combined version, where each word is separated by a dollar sign $.<br>For example, for the words “<strong>hello</strong>“, “<strong>how</strong>“, “<strong>are</strong>“, “<strong>you</strong>“, the output should be “<strong>$hello$how$are$you$</strong>“.<br>The given code declares a class named <strong>Add</strong>, with a constructor that takes one rest parameter.<br>Complete the code by adding a <strong>print</strong>() method to the class, which should generate the requested output.</p><blockquote><p>Note, that the dollar sign is placed at the beginning and at the end of the output.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight javascript"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs javascript"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Add</span> </span>&#123;<br>  <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params">...words</span>)</span> &#123;<br>      <span class="hljs-built_in">this</span>.words = words;<br>  &#125;<br>  <span class="hljs-comment">//your code goes here</span><br>  print()<br>  &#123;<br>    <span class="hljs-keyword">var</span> out = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">this</span>.words.length; i++) &#123;<br>      <span class="hljs-keyword">var</span> out = out + <span class="hljs-built_in">this</span>.words[i] + <span class="hljs-string">&quot;$&quot;</span><br>    &#125;<br><br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;$&quot;</span> + out);<br>  &#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> x = <span class="hljs-keyword">new</span> Add(<span class="hljs-string">&quot;hehe&quot;</span>, <span class="hljs-string">&quot;hoho&quot;</span>, <span class="hljs-string">&quot;haha&quot;</span>, <span class="hljs-string">&quot;hihi&quot;</span>, <span class="hljs-string">&quot;huhu&quot;</span>);<br><span class="hljs-keyword">var</span> y = <span class="hljs-keyword">new</span> Add(<span class="hljs-string">&quot;this&quot;</span>, <span class="hljs-string">&quot;is&quot;</span>, <span class="hljs-string">&quot;awesome&quot;</span>);<br><span class="hljs-keyword">var</span> z = <span class="hljs-keyword">new</span> Add(<span class="hljs-string">&quot;lorem&quot;</span>, <span class="hljs-string">&quot;ipsum&quot;</span>, <span class="hljs-string">&quot;dolor&quot;</span>, <span class="hljs-string">&quot;sit&quot;</span>, <span class="hljs-string">&quot;amet&quot;</span>, <span class="hljs-string">&quot;consectetur&quot;</span>, <span class="hljs-string">&quot;adipiscing&quot;</span>, <span class="hljs-string">&quot;elit&quot;</span>);<br>x.print();<br>y.print();<br>z.print();<br></code></pre></div></td></tr></table></figure><h1 id="C-1"><a href="#C-1" class="headerlink" title="C#"></a>C#</h1><h2 id="Code-Projects-3"><a href="#Code-Projects-3" class="headerlink" title="Code Projects"></a>Code Projects</h2><h3 id="Area-of-a-Circle"><a href="#Area-of-a-Circle" class="headerlink" title="Area of a Circle"></a>Area of a Circle</h3><p>We are going to write a program that will calculate the area of a circle.<br>The area enclosed by a circle of radius r is <strong>πr²</strong>, where π (pi) is the constant ratio of the circumference of any circle to its diameter, and <strong>r</strong> is the radius.<br>The given program declares a constant pi variable with a value of 3.14.<br>Complete the program to take the radius as input, then calculate and output the area of the circle.</p><p><strong>Sample Input:</strong><br>5</p><p><strong>Sample Output:</strong><br>78.5</p><blockquote><p>Remember to <strong>convert</strong> the inputted value to type double.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">SoloLearn</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">const</span> <span class="hljs-built_in">double</span> pi = <span class="hljs-number">3.14</span>;<br>            <span class="hljs-built_in">double</span> radius;<br>            <br>            <span class="hljs-comment">//your code goes here</span><br>            radius = Convert.ToDouble(Console.ReadLine());<br>            <span class="hljs-built_in">double</span> area = radius * pi * radius ;<br>            Console.WriteLine(area);<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Multiple-of-3"><a href="#Multiple-of-3" class="headerlink" title="Multiple of 3"></a>Multiple of 3</h3><p>You are an elementary school teacher and explaining multiplication to students.<br>You are going to use multiplication by 3 as your example.<br>The program you are given takes N number as input. Write a program to output all numbers from 1 to N, replacing all numbers that are multiples of 3 by “*”.</p><p><strong>Sample Input:</strong><br>7</p><p><strong>Sample Output:</strong><br>12*45*7</p><p><strong>Explanation</strong>: Let’s break down the distance the snail covers each day:<br>Day 1: 7-2=5<br>Day 2: 5+7-2=10<br>Day 3: 10+7-2=15<br>Day 4: 15+7-2=20<br>Day 5: 20+7-2=25<br>Day 6: 25+7=32<br>So, on Day 6 the snail will reach 32 feet and get out of the well at day, without slipping back that night.</p><blockquote><p><strong>Hint</strong>: You can use a loop to calculate the distance the snail covers each day, and break the loop when it reaches the desired distance.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">SoloLearn</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">int</span> number = Convert.ToInt32(Console.ReadLine());<br>            <br>            <span class="hljs-comment">//your code goes here</span><br>            <span class="hljs-built_in">string</span> result = <span class="hljs-string">&quot;&quot;</span>;<br>            <span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span> ;<br>            <br>            <span class="hljs-keyword">while</span> ( i &lt;= number )<br>            &#123;<br>            <span class="hljs-keyword">if</span> ( i % <span class="hljs-number">3</span> == <span class="hljs-number">0</span> )<br>            &#123;<br>            result = result + <span class="hljs-string">&#x27;*&#x27;</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span><br>            &#123;<br>            result = result + i.ToString();<br>            &#125;<br>            i++;<br>            &#125;<br>            <br>            Console.WriteLine ( result );<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Level-Points"><a href="#Level-Points" class="headerlink" title="Level Points"></a>Level Points</h3><p>Passing the first level of a video game awards the player 1 point. For each subsequent level passed, the points awarded increment by 1 (2 for the 2nd level, 3 for the 3rd, and so on).<br>The program you are given takes the number of passed levels as input. Complete the given function to take that number as an argument, and recursively calculate and return the total number of points given for all passed levels.</p><p><strong>Sample Input:</strong><br>3</p><p><strong>Sample Output:</strong><br>6</p><p><strong>Explanation:</strong><br>Level 1: 1 point<br>Level 2: 2 points<br>Level 3: 3 points</p><blockquote><p>Don’t forget about the <strong>base case</strong>.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">SoloLearn</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">int</span> levels = Convert.ToInt32(Console.ReadLine());<br><br>            Console.WriteLine(Points(levels));<br>        &#125;<br><br>        <br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-built_in">int</span> <span class="hljs-title">Points</span>(<span class="hljs-params"><span class="hljs-built_in">int</span> levels</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-comment">//your code goes here</span><br>            <span class="hljs-built_in">int</span> i = <span class="hljs-number">1</span>;<br>            <span class="hljs-built_in">int</span> result = <span class="hljs-number">0</span>;<br>            <br>            <span class="hljs-keyword">while</span> ( i &lt;= levels )<br>            &#123;<br>            result = result + i;<br>            i++;<br>            &#125;<br>            <span class="hljs-keyword">return</span> result;<br>        &#125;<br><br>    &#125;<br><br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Social-Network"><a href="#Social-Network" class="headerlink" title="Social Network"></a>Social Network</h3><p>You are making a social network application and want to add post creation functionality.<br>As a user creates a post, the text “New post” should be automatically outputted so that then the user can add the text he/she wants to share.<br>The program you are given declares a <em><strong>Post</strong></em> class with a <em><strong>text</strong></em> private field, and the *<strong>ShowPost()*</strong> method which outputs the content.<br>Complete the class with<br>- a constructor, which outputs “New post” as called,<br>- *<strong>Text*</strong> property, which will allow you to get and set the value of the <em><strong>text</strong></em> field.</p><p>Once you have made the changes to the program so that it works correctly, then in main, the program will take the text of the post from the user, create a post object, assign the taken value to the text field and output it.</p><p><strong>Sample Input:</strong><br>Hello!</p><p><strong>Sample Output:</strong><br>New post<br>Hello!</p><blockquote><p>Recall the <strong>value</strong> keyword for set accessor.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Code_Coach_Challenge</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">string</span> postText = Console.ReadLine();<br><br>            Post post = <span class="hljs-keyword">new</span> Post();<br>            post.Text = postText;<br>            post.ShowPost();<br><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Post</span><br>    &#123;<br>        <span class="hljs-keyword">private</span> <span class="hljs-built_in">string</span> text;<br>        <br>        <span class="hljs-comment">//write a constructor here</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">Post</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>        Console.WriteLine(<span class="hljs-string">&quot;New post&quot;</span>);<br>        &#125;        <br><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">ShowPost</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            Console.WriteLine(text);<br>        &#125;<br>        <br>        <span class="hljs-comment">//write a property for member text</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> Text<br>        &#123;<br>          <span class="hljs-keyword">get</span> &#123; <span class="hljs-keyword">return</span> text; &#125;<br>          <span class="hljs-keyword">set</span> &#123; text = <span class="hljs-keyword">value</span>;&#125;<br>        &#125;        <br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Words-1"><a href="#Words-1" class="headerlink" title="Words"></a>Words</h3><p>The program you are given defines an array with 10 words and takes a letter as input.<br>Write a program to iterate through the array and output words containing the taken letter.<br>If there is no such word, the program should output “No match”.</p><p><strong>Sample Input:</strong><br>u</p><p><strong>Sample Output:</strong><br>fun</p><blockquote><p>Recall the <strong>Contains()</strong> method.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Code_Coach_Challenge</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">string</span>[] words = &#123;<br>                <span class="hljs-string">&quot;home&quot;</span>,<br>                <span class="hljs-string">&quot;programming&quot;</span>,<br>                <span class="hljs-string">&quot;victory&quot;</span>,<br>                <span class="hljs-string">&quot;C#&quot;</span>,<br>                <span class="hljs-string">&quot;football&quot;</span>,<br>                <span class="hljs-string">&quot;sport&quot;</span>,<br>                <span class="hljs-string">&quot;book&quot;</span>,<br>                <span class="hljs-string">&quot;learn&quot;</span>,<br>                <span class="hljs-string">&quot;dream&quot;</span>,<br>                <span class="hljs-string">&quot;fun&quot;</span><br>            &#125;;<br><br>            <span class="hljs-built_in">string</span> letter = Console.ReadLine();<br><br>            <span class="hljs-built_in">int</span> count = <span class="hljs-number">0</span>;<br>            <br>            <span class="hljs-comment">//your code goes here</span><br>            <span class="hljs-built_in">int</span> flag = <span class="hljs-number">0</span>;<br>            <span class="hljs-keyword">while</span> ( count &lt; <span class="hljs-number">10</span> )<br>            &#123;<br>             <span class="hljs-keyword">if</span> ( words[count].Contains(letter) )<br>             &#123;<br>                 Console.WriteLine( words [ count ] );<br>                    flag = <span class="hljs-number">1</span>;<br>             &#125;<br>             count++;<br>            &#125;<br>            <span class="hljs-keyword">if</span> ( flag == <span class="hljs-number">0</span> )<br>            &#123;<br>               Console.WriteLine( <span class="hljs-string">&quot;No match&quot;</span>);<br>            &#125;            <br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Dance"><a href="#Dance" class="headerlink" title="Dance"></a>Dance</h3><p>In a ballroom dancing competition, each dancer from a pair is evaluated separately, and then their points are summed up to get the total pair score.<br>The program you are given takes the names and the points of each dancer as input and creates a *<strong>DancerPoints*</strong> objects for each dancer, using the taken name and score values as parameters for constructors.<br>Complete the given class, using overload + operator to return an new object where the names of dancers are in one string (see sample output) and the score is equal to the sum of their points.<br>The declaration of that object and the output of its points are already written in Main().</p><p><strong>Sample Input:</strong><br>Dave<br>8<br>Jessica<br>7</p><p><strong>Sample Output:</strong><br>Dave &amp; Jessica<br>15</p><blockquote><p>Remember to use the <strong>operator</strong> keyword.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Code_Coach_Challenge</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">string</span> name1 = Console.ReadLine();<br>            <span class="hljs-built_in">int</span> points1 = Convert.ToInt32(Console.ReadLine());<br>            <span class="hljs-built_in">string</span> name2 = Console.ReadLine();<br>            <span class="hljs-built_in">int</span> points2 = Convert.ToInt32(Console.ReadLine());<br><br>            DancerPoints dancer1 = <span class="hljs-keyword">new</span> DancerPoints(name1, points1);<br>            DancerPoints dancer2 = <span class="hljs-keyword">new</span> DancerPoints(name2, points2);<br><br>            DancerPoints total = dancer1 + dancer2;<br>            Console.WriteLine(total.name);<br>            Console.WriteLine(total.points);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">DancerPoints</span><br>    &#123;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">string</span> name;<br>        <span class="hljs-keyword">public</span> <span class="hljs-built_in">int</span> points;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-title">DancerPoints</span>(<span class="hljs-params"><span class="hljs-built_in">string</span> name, <span class="hljs-built_in">int</span> points</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">this</span>.name = name;<br>            <span class="hljs-keyword">this</span>.points = points;<br>        &#125;<br><br>        <span class="hljs-comment">//overload the + operator</span><br>        <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> DancerPoints <span class="hljs-keyword">operator</span>+( DancerPoints a, DancerPoints b)<br>        &#123;<br>        <span class="hljs-built_in">string</span> name = a.name + <span class="hljs-string">&quot; &amp; &quot;</span> + b.name;<br>          <span class="hljs-built_in">int</span> points = a.points + b.points;<br><br>          DancerPoints res = <span class="hljs-keyword">new</span> DancerPoints ( name, points );<br>          <span class="hljs-keyword">return</span> res;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Drawing-Application"><a href="#Drawing-Application" class="headerlink" title="Drawing Application"></a>Drawing Application</h3><p>You are creating a drawing application and currently have only 1 tool - a pencil. You want to add brush and spray to the drawing toolbar.<br>The program you are given declares an IDraw interface with the StartDraw() method, and class Draw, which performs pencil drawing by implementing the IDraw interface. It outputs “Using pencil”.<br>Complete the given Brush and Spray classes by</p><ul><li>inheriting them from class Draw</li><li>implementing the StartDraw() method for each tool, in order to output<br>“Using brush” for Brush, or<br>“Using spray” for Spray.</li></ul><p>The Draw objects and their method calls are provided in Main().</p><blockquote><p>Don’t forget about the <strong>override</strong> keyword.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">Code_Coach_Challenge</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            Draw pencil = <span class="hljs-keyword">new</span> Draw();<br>            Draw brush = <span class="hljs-keyword">new</span> Brush();<br>            Draw spray = <span class="hljs-keyword">new</span> Spray();<br><br>            pencil.StartDraw();<br>            brush.StartDraw();<br>            spray.StartDraw();<br><br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">/*</span><br><span class="hljs-comment">    Draw =&gt; &quot;Using pencil&quot;</span><br><span class="hljs-comment">    Brush =&gt; &quot;Using brush&quot;</span><br><span class="hljs-comment">    Spray =&gt; &quot;Using spray&quot;</span><br><span class="hljs-comment">    */</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title">IDraw</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">StartDraw</span>(<span class="hljs-params"></span>)</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Draw</span> : <span class="hljs-title">IDraw</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">virtual</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartDraw</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;Using pencil&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//inherit this class from the class Draw</span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Brush</span> : <span class="hljs-title">Draw</span><br>    &#123;<br>        <span class="hljs-comment">//implement the StartDraw() method</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartDraw</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;Using brush&quot;</span>);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-comment">//inherit this class from the class Draw</span><br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Spray</span> : <span class="hljs-title">Draw</span><br>    &#123;<br>        <span class="hljs-comment">//implement the StartDraw() method</span><br>        <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">override</span> <span class="hljs-keyword">void</span> <span class="hljs-title">StartDraw</span>(<span class="hljs-params"></span>)</span><br><span class="hljs-function"></span>        &#123;<br>            Console.WriteLine(<span class="hljs-string">&quot;Using spray&quot;</span>);<br>        &#125;<br><br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Robot-barman"><a href="#Robot-barman" class="headerlink" title="Robot-barman"></a>Robot-barman</h3><p>You have a robot-barman and his goal is to neatly arrange drinks on the shelves of the bar. He is very smart and takes as many drinks as are necessary to evenly distribute them on the shelves, but he still has problems with division.</p><p>The program installed in the robot takes the number of drinks and the number of the shelves as input.<br>Complete the program to evenly distribute the drinks on shelves: by dividing the number of drinks by the number of shelves and outputting the result.<br>The program must also, handle those two possible problems:</p><ol><li>the divider (the number of shelves) should never be zero</li><li>both inputs should be integers.<br>For the first exception, the program should output “At least 1 shelf” and for the second, “Please insert an integer”.</li></ol><p><strong>Sample Input:</strong><br>6<br>two</p><p><strong>Sample Output:</strong><br>Please insert an integer</p><blockquote><p>Use <strong>DivideByZeroException</strong> for the first exception and <strong>FormatException</strong> for the second one.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">SoloLearn</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-keyword">try</span><br>            &#123;<br>                <span class="hljs-built_in">int</span> drinks = Convert.ToInt32(Console.ReadLine());<br>                <span class="hljs-built_in">int</span> shelves = Convert.ToInt32(Console.ReadLine());<br><br>                <span class="hljs-comment">//your code goes here</span><br>                <span class="hljs-built_in">int</span> answer= drinks / shelves ;<br>                 Console.WriteLine(answer);<br>            &#125;<br>            <span class="hljs-comment">/*</span><br><span class="hljs-comment">             * 1. DivideByZeroException =&gt; &quot;At least 1 shelf&quot;</span><br><span class="hljs-comment">             * 2. FormatException =&gt; &quot;Please insert an integer&quot;</span><br><span class="hljs-comment">            */</span><br>            catch (DivideByZeroException b)<br>            &#123;<br>              Console.WriteLine (<span class="hljs-string">&quot;At least 1 shelf&quot;</span>);<br>            &#125;<br>            catch (FormatException a)<br>            &#123;<br>              Console.WriteLine (<span class="hljs-string">&quot;Please insert an integer&quot;</span>);<br>            &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id="Coffee-Time"><a href="#Coffee-Time" class="headerlink" title="Coffee Time"></a>Coffee Time</h3><p>A coffee shop manager is running a promotion and wants to offer a discount for coffee drinks.<br>The program you are given takes the discount value as input and defines a dictionary, where the names of the coffee drinks are set as keys, and their prices are set as values.<br>Write a program to discount all of the prices and output a new price list in the format shown below.</p><p><strong>Sample Input:</strong><br>10</p><p><strong>Sample Output:</strong><br>Americano: 45<br>Latte: 63<br>Flat White: 54<br>Espresso: 54<br>Cappuccino: 72<br>Mocha: 81</p><blockquote><p>Use <strong>coffee.Keys.ToArray()</strong> inside the foreach loop.<br>Note the <strong>space</strong> after the “:” in the output.</p></blockquote><p><strong>Code:</strong></p><figure class="highlight c#"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs c#"><span class="hljs-keyword">using</span> System;<br><span class="hljs-keyword">using</span> System.Collections.Generic;<br><span class="hljs-keyword">using</span> System.Linq;<br><span class="hljs-keyword">using</span> System.Text;<br><span class="hljs-keyword">using</span> System.Threading.Tasks;<br><br><span class="hljs-keyword">namespace</span> <span class="hljs-title">SoloLearn</span><br>&#123;<br>    <span class="hljs-keyword">class</span> <span class="hljs-title">Program</span><br>    &#123;<br>        <span class="hljs-function"><span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">Main</span>(<span class="hljs-params"><span class="hljs-built_in">string</span>[] args</span>)</span><br><span class="hljs-function"></span>        &#123;<br>            <span class="hljs-built_in">int</span> discount = Convert.ToInt32(Console.ReadLine());<br><br>            Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">int</span>&gt; coffee = <span class="hljs-keyword">new</span> Dictionary&lt;<span class="hljs-built_in">string</span>, <span class="hljs-built_in">int</span>&gt;();<br>            coffee.Add(<span class="hljs-string">&quot;Americano&quot;</span>, <span class="hljs-number">50</span>);<br>            coffee.Add(<span class="hljs-string">&quot;Latte&quot;</span>, <span class="hljs-number">70</span>);<br>            coffee.Add(<span class="hljs-string">&quot;Flat White&quot;</span>, <span class="hljs-number">60</span>);<br>            coffee.Add(<span class="hljs-string">&quot;Espresso&quot;</span>, <span class="hljs-number">60</span>);<br>            coffee.Add(<span class="hljs-string">&quot;Cappuccino&quot;</span>, <span class="hljs-number">80</span>);<br>            coffee.Add(<span class="hljs-string">&quot;Mocha&quot;</span>, <span class="hljs-number">90</span>);<br><br><br>            <span class="hljs-comment">//your code goes here</span><br>            <span class="hljs-built_in">int</span> total = <span class="hljs-number">0</span>;<br>            <br>            <span class="hljs-keyword">foreach</span> ( <span class="hljs-built_in">string</span> i <span class="hljs-keyword">in</span> coffee.Keys )<br>             &#123;<br>             total = coffee [ i ] - coffee [ i ] * discount / <span class="hljs-number">100</span>;<br>             Console.WriteLine( i + <span class="hljs-string">&quot;: &quot;</span> + total.ToString() );<br>             &#125;<br><br><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></div></td></tr></table></figure><hr><h3 id=""><a href="#" class="headerlink" title=""></a></h3>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>Java</tag>
      
      <tag>JavaScript</tag>
      
      <tag>C#</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C++函数模板（Function Template）</title>
    <link href="/2021/05/06/article-007/"/>
    <url>/2021/05/06/article-007/</url>
    
    <content type="html"><![CDATA[<h1 id="定义模板函数的语法"><a href="#定义模板函数的语法" class="headerlink" title="定义模板函数的语法"></a>定义模板函数的语法</h1><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> 类型参数<span class="hljs-number">1</span> , <span class="hljs-keyword">typename</span> 类型参数<span class="hljs-number">2</span> , ...&gt;<br>返回值类型  函数名(形参列表)&#123;<br>    <span class="hljs-comment">//在函数体中可以使用类型参数</span><br>&#125;<br></code></pre></div></td></tr></table></figure><p>&emsp;&emsp;类型参数可以有多个，它们之间以逗号<code>,</code>分隔。类型参数列表以<code>&lt; &gt;</code>包围，形式参数列表以<code>( )</code>包围。</p><p>&emsp;&emsp;函数模板也可以提前声明，不过声明时需要带上模板头，并且模板头和函数定义（声明）是一个不可分割的整体，它们可以换行，但中间不能有分号。</p><h1 id="【函数模板1】求三个数的最大值"><a href="#【函数模板1】求三个数的最大值" class="headerlink" title="【函数模板1】求三个数的最大值"></a>【函数模板1】求三个数的最大值</h1><h2 id="函数模板定义"><a href="#函数模板定义" class="headerlink" title="函数模板定义"></a>函数模板定义</h2><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-function">T <span class="hljs-title">max</span><span class="hljs-params">(T a, T b, T c)</span></span>;<br></code></pre></div></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;               <span class="hljs-comment">//模板头，这里不能有分号</span><br><span class="hljs-function">T <span class="hljs-title">max</span><span class="hljs-params">(T a, T b, T c)</span>                <span class="hljs-comment">//函数头</span></span><br><span class="hljs-function"></span>&#123;<br>    T max_num = a;<br>    <span class="hljs-keyword">if</span>(b &gt; max_num)<br>        max_num = b;<br>    <span class="hljs-keyword">if</span>(c &gt; max_num)<br>        max_num = c;<br>    <span class="hljs-keyword">return</span> max_num;<br>&#125;<br></code></pre></div></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-comment">//声明函数模板</span><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-function">T <span class="hljs-title">max</span><span class="hljs-params">(T a, T b, T c)</span></span>;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">( )</span></span>&#123;<br>    <span class="hljs-comment">//求三个整数的最大值</span><br>    <span class="hljs-keyword">int</span> i1, i2, i3, i_max;<br>    cin &gt;&gt; i1 &gt;&gt; i2 &gt;&gt; i3;<br>    i_max = <span class="hljs-built_in">max</span>(i1, i2, i3);<br>    cout &lt;&lt; <span class="hljs-string">&quot;i_max = &quot;</span> &lt;&lt; i_max &lt;&lt; endl;<br><br>    <span class="hljs-comment">//求三个浮点数的最大值</span><br>    <span class="hljs-keyword">double</span> d1, d2, d3, d_max;<br>    cin &gt;&gt; d1 &gt;&gt; d2 &gt;&gt; d3;<br>    d_max = <span class="hljs-built_in">max</span>(d1, d2, d3);<br>    cout &lt;&lt; <span class="hljs-string">&quot;d_max = &quot;</span> &lt;&lt; d_max &lt;&lt; endl;<br><br>    <span class="hljs-comment">//求三个长整型数的最大值</span><br>    <span class="hljs-keyword">long</span> g1, g2, g3, g_max;<br>    cin &gt;&gt; g1 &gt;&gt; g2 &gt;&gt; g3;<br>    g_max = <span class="hljs-built_in">max</span>(g1, g2, g3);<br>    cout &lt;&lt; <span class="hljs-string">&quot;g_max = &quot;</span> &lt;&lt; g_max &lt;&lt; endl;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br><span class="hljs-comment">//定义函数模板</span><br><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;               <span class="hljs-comment">//模板头，这里不能有分号</span><br><span class="hljs-function">T <span class="hljs-title">max</span><span class="hljs-params">(T a, T b, T c)</span></span>&#123;               <span class="hljs-comment">//函数头</span><br>    T max_num = a;<br>    <span class="hljs-keyword">if</span>(b &gt; max_num)<br>        max_num = b;<br>    <span class="hljs-keyword">if</span>(c &gt; max_num)<br>        max_num = c;<br>    <span class="hljs-keyword">return</span> max_num;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><h4 id="输入-1"><a href="#输入-1" class="headerlink" title="输入 1"></a>输入 1</h4><figure class="highlight basic"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs basic"><span class="hljs-symbol">12 </span> <span class="hljs-number">34</span>  <span class="hljs-number">100</span><br></code></pre></div></td></tr></table></figure><h4 id="输出-1"><a href="#输出-1" class="headerlink" title="输出 1"></a>输出 1</h4><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-attr">i_max</span> = <span class="hljs-number">100</span><br></code></pre></div></td></tr></table></figure><h4 id="输入-2"><a href="#输入-2" class="headerlink" title="输入 2"></a>输入 2</h4><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">73</span>.<span class="hljs-number">234</span>  <span class="hljs-number">90</span>.<span class="hljs-number">2</span>  <span class="hljs-number">878</span>.<span class="hljs-number">23</span><br></code></pre></div></td></tr></table></figure><h4 id="输出-2"><a href="#输出-2" class="headerlink" title="输出 2"></a>输出 2</h4><figure class="highlight apache"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs apache"><span class="hljs-attribute">d_max</span> = <span class="hljs-number">878</span>.<span class="hljs-number">23</span><br></code></pre></div></td></tr></table></figure><h4 id="输入-3"><a href="#输入-3" class="headerlink" title="输入 3"></a>输入 3</h4><figure class="highlight basic"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs basic"><span class="hljs-symbol">344 </span> <span class="hljs-number">900</span>  <span class="hljs-number">1000</span><br></code></pre></div></td></tr></table></figure><h4 id="输出-3"><a href="#输出-3" class="headerlink" title="输出 3"></a>输出 3</h4><figure class="highlight ini"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs ini"><span class="hljs-attr">g_max</span> = <span class="hljs-number">1000</span><br></code></pre></div></td></tr></table></figure><h1 id="【函数模板2】变量交换"><a href="#【函数模板2】变量交换" class="headerlink" title="【函数模板2】变量交换"></a>【函数模板2】变量交换</h1><h2 id="函数模板定义-1"><a href="#函数模板定义-1" class="headerlink" title="函数模板定义"></a>函数模板定义</h2><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Swap</span><span class="hljs-params">(T&amp; a, T&amp; b)</span></span>;<br></code></pre></div></td></tr></table></figure><h2 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-keyword">template</span> &lt;<span class="hljs-keyword">typename</span> T&gt;<br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Swap</span><span class="hljs-params">(T&amp; a, T&amp; b)</span></span><br><span class="hljs-function"></span>&#123;<br>    T tmp = a;<br>    a = b;<br>    b = tmp;<br>&#125;<br></code></pre></div></td></tr></table></figure><p>&emsp;&emsp;上边就定义了一个变量交换的函数模板，在使用函数模板时有两种方式</p><ul><li>自动类型推到调用 <code>Swap(a, b)</code></li><li>具体类型显示调用 <code>Swap&lt;int&gt;(a, b)</code></li></ul>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>编程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>函数模板</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>华中科技大学复试上机题</title>
    <link href="/2021/04/13/article-006/"/>
    <url>/2021/04/13/article-006/</url>
    
    <content type="html"><![CDATA[<h1 id="1-打印日期"><a href="#1-打印日期" class="headerlink" title="1 打印日期"></a>1 打印日期</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;给出年份 m 和一年中的第 n 天，算出第 n 天是几月几号。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;输入包括两个整数：y (1 &lt;= y &lt;= 300) 和 n (1 &lt;= n &lt;= 366)。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;可能有多组测试数据，对于每组数据，按 yyyy-mm-dd 的格式将输入中对应的日期打印出来。</p><!--more--><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">2000 3<br>2000 31<br>2000 40<br>2000 60<br>2000 61<br>2001 60<br></code></pre></div></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">2000-01-03<br>2000-01-31<br>2000-02-09<br>2000-02-29<br>2000-03-01<br>2001-03-01<br></code></pre></div></td></tr></table></figure><h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9YP2a8">http://t.cn/E9YP2a8</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">int</span> dayTable[<span class="hljs-number">2</span>][<span class="hljs-number">13</span>] = &#123;<br>    &#123;<span class="hljs-number">0</span>, <span class="hljs-number">31</span>, <span class="hljs-number">28</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>&#125;,<br>    &#123;<span class="hljs-number">0</span>, <span class="hljs-number">31</span>, <span class="hljs-number">29</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>&#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">IsLeapYear</span><span class="hljs-params">(<span class="hljs-keyword">int</span> year)</span> </span>&#123;<br>    <span class="hljs-keyword">return</span> (year % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; year % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>) || (year % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> year, month, day;<br>    <span class="hljs-keyword">int</span> number;                                 <span class="hljs-comment">//记录天数</span><br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;year, &amp;number) != EOF) &#123;<br>        month = <span class="hljs-number">0</span>;                              <span class="hljs-comment">//初始化月</span><br>        <span class="hljs-keyword">int</span> row = <span class="hljs-built_in">IsLeapYear</span>(year);<br>        <span class="hljs-keyword">while</span> (number &gt; dayTable[row][month]) &#123; <span class="hljs-comment">//确定月</span><br>            number -= dayTable[row][month];<br>            month++;<br>        &#125;<br>        day = number;                           <span class="hljs-comment">//确定日</span><br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%04d-%02d-%02d\n&quot;</span>, year, month, day);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>考研</category>
      
      <category>编程</category>
      
      <category>复试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复试</tag>
      
      <tag>机试题库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>浙江大学复试上机题</title>
    <link href="/2021/04/07/article-005/"/>
    <url>/2021/04/07/article-005/</url>
    
    <content type="html"><![CDATA[<h1 id="1-xxx定律"><a href="#1-xxx定律" class="headerlink" title="1 xxx定律"></a>1 xxx定律</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;对于一个数 n，如果是偶数，就把 n 砍掉一半；如果是奇数，把 n 变成 3n + 1 后砍掉一半，直到该数变为 1 为止。请计算需要经过几步才能将 n 变到 1 ，具体可见样例。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;测试包含多个用例，每个用例包含一个整数 n，当 n 为 0 时表示输入结束。（1 &lt;= n &lt;= 10000）</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;对于每组测试用例请输出一个数，表示需要经过的步数，每组输出占一行。</p><!--more--><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">3<br>1<br>0<br></code></pre></div></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">5<br>0<br></code></pre></div></td></tr></table></figure><h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E937wDs">http://t.cn/E937wDs</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n) != EOF)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>)<br>            <span class="hljs-keyword">break</span>;<br>        <span class="hljs-keyword">int</span> step = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">while</span> (n != <span class="hljs-number">1</span>)<br>        &#123;<br>            <span class="hljs-keyword">if</span> (n % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>)<br>                n = n / <span class="hljs-number">2</span>;<br>            <span class="hljs-keyword">else</span><br>                n = (<span class="hljs-number">3</span> * n + <span class="hljs-number">1</span>) / <span class="hljs-number">2</span>;<br>            step++;<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, step);<br>    &#125;<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>考研</category>
      
      <category>编程</category>
      
      <category>复试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复试</tag>
      
      <tag>机试题库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>哈尔滨工业大学复试上机题</title>
    <link href="/2021/04/07/article-004/"/>
    <url>/2021/04/07/article-004/</url>
    
    <content type="html"><![CDATA[<h1 id="1-最大公约数"><a href="#1-最大公约数" class="headerlink" title="1 最大公约数"></a>1 最大公约数</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;输入两个正整数，求其最大公约数。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;测试数据有多组，每组输入两个正整数。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;对于每组输入,请输出其最大公约数。</p><!--more--><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">49 14<br></code></pre></div></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">7<br></code></pre></div></td></tr></table></figure><h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/AiCuWLTS">http://t.cn/AiCuWLTS</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">GCD</span><span class="hljs-params">(<span class="hljs-keyword">int</span> a, <span class="hljs-keyword">int</span> b)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (b == <span class="hljs-number">0</span>)<br>        <span class="hljs-keyword">return</span> a;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">GCD</span>(b, a % b);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> a, b;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d&quot;</span>, &amp;a, &amp;b) != EOF)<br>    &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, <span class="hljs-built_in">GCD</span>(a, b));<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="2-素数判定"><a href="#2-素数判定" class="headerlink" title="2 素数判定"></a>2 素数判定</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;给定一个数n，要求判断其是否为素数（0,1和负数都是非素数）。</p><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;测试数据有多组，每组输入一个数n。</p><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;对于每组输入,若是素数则输出yes，否则输入no。</p><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">13<br></code></pre></div></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">yes<br></code></pre></div></td></tr></table></figure><h2 id="提交网址-1"><a href="#提交网址-1" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/AiCuWE0Q">http://t.cn/AiCuWE0Q</a></p><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">Judge</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span> </span>&#123;                             <span class="hljs-comment">//判断是否为质数</span><br>    <span class="hljs-keyword">if</span> (x &lt; <span class="hljs-number">2</span>) &#123;                                <span class="hljs-comment">//小于2必定不是</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">int</span> bound = <span class="hljs-built_in">sqrt</span>(x) + <span class="hljs-number">1</span>;                    <span class="hljs-comment">//确定判断上界</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt;= bound; ++i) &#123;<br>        <span class="hljs-keyword">if</span> (x % i == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n) != EOF) &#123;<br>        <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Judge</span>(n)) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;yes\n&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;no\n&quot;</span>);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>考研</category>
      
      <category>编程</category>
      
      <category>复试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复试</tag>
      
      <tag>机试题库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>北京理工大学复试上机题</title>
    <link href="/2021/04/06/article-003/"/>
    <url>/2021/04/06/article-003/</url>
    
    <content type="html"><![CDATA[<h1 id="1-日期累加"><a href="#1-日期累加" class="headerlink" title="1 日期累加"></a>1 日期累加</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;设计一个程序，它能够计算一个日期加上若干天后是什么日期。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;输入第一行表示样例个数m，接下来m行中，每行4个整数，分别表示年、月、日和累加的天数。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;输出m行，每行按yyyy-mm-dd的个数输出。</p><!--more--><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">1<br>2008 2 3 100<br></code></pre></div></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">2008-05-13<br></code></pre></div></td></tr></table></figure><h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9Yw0Cr">http://t.cn/E9Yw0Cr</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">int</span> day_table[<span class="hljs-number">2</span>][<span class="hljs-number">13</span>]=&#123;<br>    &#123;<span class="hljs-number">0</span>, <span class="hljs-number">31</span>, <span class="hljs-number">28</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>&#125;,<br>    &#123;<span class="hljs-number">0</span>, <span class="hljs-number">31</span>, <span class="hljs-number">29</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>&#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">IsLeapYear</span><span class="hljs-params">(<span class="hljs-keyword">int</span> year)</span></span>&#123;<br>    <span class="hljs-keyword">return</span> (year % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; year % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>) || (year % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">DaysOfYear</span><span class="hljs-params">(<span class="hljs-keyword">int</span> year)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">IsLeapYear</span>(year))<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">366</span>;<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">365</span>;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> year, month, day;<br>    <span class="hljs-keyword">int</span> count;<br>    <span class="hljs-keyword">int</span> caseNumber;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;caseNumber);<br>    <span class="hljs-keyword">while</span>(caseNumber--)<br>    &#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d%d&quot;</span>, &amp;year, &amp;month, &amp;day, &amp;count);<br>        <span class="hljs-keyword">int</span> row = <span class="hljs-built_in">IsLeapYear</span>(year);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; month; j++)<br>            count += day_table[row][j];<br>        count += day;<br>        <span class="hljs-keyword">while</span>(count &gt; <span class="hljs-built_in">DaysOfYear</span>(year))<br>        &#123;<br>            count -= <span class="hljs-built_in">DaysOfYear</span>(year);<br>            year++;<br>        &#125;<br>        month=<span class="hljs-number">0</span>;<br>        row = <span class="hljs-built_in">IsLeapYear</span>(year);<br>        <span class="hljs-keyword">while</span>(count &gt; day_table[row][month])<br>        &#123;<br>            count -= day_table[row][month];<br>            month++;<br>        &#125;<br>        day = count;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%04d-%02d-%02d\n&quot;</span>, year, month, day);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>考研</category>
      
      <category>编程</category>
      
      <category>复试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复试</tag>
      
      <tag>机试题库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>清华大学复试上机题</title>
    <link href="/2021/04/06/article-002/"/>
    <url>/2021/04/06/article-002/</url>
    
    <content type="html"><![CDATA[<h1 id="1-abc"><a href="#1-abc" class="headerlink" title="1 abc"></a>1 abc</h1><h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;设a、b、c均是0到9之间的数字，abc、bcc是两个三位数，且有：abc+bcc=532。求满足条件的所有a、b、c的值。</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;题目没有任何输入。</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;请输出所有满足题目条件的a、b、c的值。a、b、c之间用空格隔开。每个输出占一行。</p><!--more--><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined"><br></code></pre></div></td></tr></table></figure><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined"><br></code></pre></div></td></tr></table></figure><h2 id="提交网址"><a href="#提交网址" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9WMRTE">http://t.cn/E9WMRTE</a></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> a = <span class="hljs-number">0</span>; a &lt;= <span class="hljs-number">9</span>; a++)&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> b = <span class="hljs-number">0</span>; b &lt;= <span class="hljs-number">9</span>; b++)<br>        &#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> c = <span class="hljs-number">0</span>; c &lt;= <span class="hljs-number">9</span>; c++)<br>            &#123;<br>                <span class="hljs-keyword">if</span> (a * <span class="hljs-number">100</span> + b * <span class="hljs-number">110</span> + c * <span class="hljs-number">12</span> == <span class="hljs-number">532</span>)<br>                &#123;<br>                    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d\n&quot;</span>, a, b, c);<br>                &#125;<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="2-反序数"><a href="#2-反序数" class="headerlink" title="2 反序数"></a>2 反序数</h1><h2 id="题目描述-1"><a href="#题目描述-1" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;设N是一个四位数，它的9倍恰好是其反序数（例如：1234的反序数是4321），求N的值。</p><h2 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;题目没有任何输入。</p><h2 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;输出题目要求的4位数，如果结果有多组，则每组结果之间以回车隔开。</p><h2 id="样例输入-1"><a href="#样例输入-1" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined"><br></code></pre></div></td></tr></table></figure><h2 id="样例输出-1"><a href="#样例输出-1" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined"><br></code></pre></div></td></tr></table></figure><h2 id="提交网址-1"><a href="#提交网址-1" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9WBrut">http://t.cn/E9WBrut</a></p><h2 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Reverse</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> revx = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (x != <span class="hljs-number">0</span>)<br>    &#123;<br>        revx *= <span class="hljs-number">10</span>;<br>        revx += x % <span class="hljs-number">10</span>;<br>        x /= <span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> revx;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1000</span>; i &lt;= <span class="hljs-number">9999</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (i * <span class="hljs-number">9</span> == <span class="hljs-built_in">Reverse</span>(i))<br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, i);<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="3-今年的第几天？"><a href="#3-今年的第几天？" class="headerlink" title="3 今年的第几天？"></a>3 今年的第几天？</h1><h2 id="题目描述-2"><a href="#题目描述-2" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;输入年、月、日，计算该天是本年的第几天。</p><h2 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;包括3个整数：年(1&lt;=Y&lt;=3000)、月(1&lt;=M&lt;=12)、日(1&lt;=D&lt;=31)。</p><h2 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;输入可能有多组测试数据，对于每一组测试数据，输出一个整数，代表Input中的年、月、日对应本年的第几天。</p><h2 id="样例输入-2"><a href="#样例输入-2" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">1990 9 20<br>2000 5 1<br></code></pre></div></td></tr></table></figure><h2 id="样例输出-2"><a href="#样例输出-2" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">263<br>122<br></code></pre></div></td></tr></table></figure><h2 id="提交网址-2"><a href="#提交网址-2" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9jXK5A">http://t.cn/E9jXK5A</a></p><h2 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">int</span> day_table[<span class="hljs-number">2</span>][<span class="hljs-number">13</span>]=<br>&#123;<br>    &#123;<span class="hljs-number">0</span>, <span class="hljs-number">31</span>, <span class="hljs-number">28</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>&#125;,<br>    &#123;<span class="hljs-number">0</span>, <span class="hljs-number">31</span>, <span class="hljs-number">29</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>, <span class="hljs-number">30</span>, <span class="hljs-number">31</span>&#125;<br>&#125;;<br><br><span class="hljs-function"><span class="hljs-keyword">bool</span> <span class="hljs-title">IsLeapYear</span><span class="hljs-params">(<span class="hljs-keyword">int</span> year)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">return</span> (year % <span class="hljs-number">4</span> == <span class="hljs-number">0</span> &amp;&amp; year % <span class="hljs-number">100</span> != <span class="hljs-number">0</span>) || (year % <span class="hljs-number">400</span> == <span class="hljs-number">0</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> year, month, day;<br>    <span class="hljs-keyword">while</span>(<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d%d%d&quot;</span>, &amp;year, &amp;month, &amp;day) != EOF)<br>    &#123;<br>        <span class="hljs-keyword">int</span> count=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">int</span> row = <span class="hljs-built_in">IsLeapYear</span>(year);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> j = <span class="hljs-number">0</span>; j &lt; month; j++)<br>        &#123;<br>            count += day_table[row][j];<br>        &#125;<br>        count += day;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, count);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="4-进制转换"><a href="#4-进制转换" class="headerlink" title="4 进制转换"></a>4 进制转换</h1><h2 id="题目描述-3"><a href="#题目描述-3" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;将一个长度最多为30位数字的十进制非负整数转换为二进制数输出。</p><h2 id="输入-3"><a href="#输入-3" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;多组数据，每行为一个长度不超过30位的十进制非负整数。（注意是10进制数字的个数可能有30个，而非30bits的整数）</p><h2 id="输出-3"><a href="#输出-3" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;每行输出对应的二进制数。</p><h2 id="样例输入-3"><a href="#样例输入-3" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">0<br>1<br>3<br>8<br></code></pre></div></td></tr></table></figure><h2 id="样例输出-3"><a href="#样例输出-3" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">0<br>1<br>11<br>1000<br></code></pre></div></td></tr></table></figure><h2 id="提交网址-3"><a href="#提交网址-3" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/AiCuoPRO">http://t.cn/AiCuoPRO</a></p><h2 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function">string <span class="hljs-title">Divide</span><span class="hljs-params">(string str, <span class="hljs-keyword">int</span> x)</span>                        <span class="hljs-comment">//字符串除法</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> remainder = <span class="hljs-number">0</span>;                                  <span class="hljs-comment">//保存余数</span><br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; str.<span class="hljs-built_in">size</span>(); ++i) <br>    &#123;<br>        <span class="hljs-keyword">int</span> current = remainder * <span class="hljs-number">10</span> + str[i] - <span class="hljs-string">&#x27;0&#x27;</span>;<br>        str[i] = current / x + <span class="hljs-string">&#x27;0&#x27;</span>;<br>        remainder = current % x;<br>    &#125;<br>    <span class="hljs-keyword">int</span> position = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span> (str[position] == <span class="hljs-string">&#x27;0&#x27;</span>)                        <span class="hljs-comment">//寻找首个非0下标</span><br>    &#123;<br>        position++;<br>    &#125;<br>    <span class="hljs-keyword">return</span> str.<span class="hljs-built_in">substr</span>(position);                        <span class="hljs-comment">//删除前置多余的0</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    string str;<br>    <span class="hljs-keyword">while</span> (cin &gt;&gt; str) <br>    &#123;<br>        vector&lt;<span class="hljs-keyword">int</span>&gt; binary;<br>        <span class="hljs-keyword">while</span> (str.<span class="hljs-built_in">size</span>() != <span class="hljs-number">0</span>) <br>        &#123;<br>            <span class="hljs-keyword">int</span> last = str[str.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>] - <span class="hljs-string">&#x27;0&#x27;</span>;       <span class="hljs-comment">//最低位的值</span><br>            binary.<span class="hljs-built_in">push_back</span>(last % <span class="hljs-number">2</span>);                 <span class="hljs-comment">//取模运算</span><br>            str = <span class="hljs-built_in">Divide</span>(str, <span class="hljs-number">2</span>);                       <span class="hljs-comment">//整除运算</span><br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = binary.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; --i) <br>        &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>, binary[i]);<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="5-对称平方数1"><a href="#5-对称平方数1" class="headerlink" title="5 对称平方数1"></a>5 对称平方数1</h1><h2 id="题目描述-4"><a href="#题目描述-4" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;打印所有不超过256，其平方具有对称性质的数。如2，11就是这样的数，因为2<em>2=4，11</em>11=121。</p><h2 id="输入-4"><a href="#输入-4" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;无任何输入数据</p><h2 id="输出-4"><a href="#输出-4" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;输出具有题目要求的性质的数。如果输出数据不止一组，各组数据之间以回车隔开。</p><h2 id="样例输入-4"><a href="#样例输入-4" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined"><br></code></pre></div></td></tr></table></figure><h2 id="样例输出-4"><a href="#样例输出-4" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined"><br></code></pre></div></td></tr></table></figure><h2 id="提交网址-4"><a href="#提交网址-4" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/E9lUYRn">http://t.cn/E9lUYRn</a></p><h2 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">Reverse</span><span class="hljs-params">(<span class="hljs-keyword">int</span> x)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> rev_x = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">while</span>(x != <span class="hljs-number">0</span>)<br>    &#123;<br>        rev_x *= <span class="hljs-number">10</span>;<br>        rev_x += x % <span class="hljs-number">10</span>;<br>        x /= <span class="hljs-number">10</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> rev_x;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt;= <span class="hljs-number">256</span>; i++)<br>    &#123;<br>        <span class="hljs-keyword">if</span>(i * i == <span class="hljs-built_in">Reverse</span>(i * i))<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, i);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="6-n的阶乘"><a href="#6-n的阶乘" class="headerlink" title="6 n的阶乘"></a>6 n的阶乘</h1><h2 id="题目描述-5"><a href="#题目描述-5" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;输入一个整数n，输出n的阶乘（每组测试用例可能包含多组数据，请注意处理）</p><h2 id="输入-5"><a href="#输入-5" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;一个整数n(1&lt;=n&lt;=20)</p><h2 id="输出-5"><a href="#输出-5" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;n的阶乘</p><h2 id="样例输入-5"><a href="#样例输入-5" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">3<br></code></pre></div></td></tr></table></figure><h2 id="样例输出-5"><a href="#样例输出-5" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">6<br></code></pre></div></td></tr></table></figure><h2 id="提交网址-5"><a href="#提交网址-5" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/Ai0oc0UY">http://t.cn/Ai0oc0UY</a></p><h2 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">long</span> <span class="hljs-keyword">long</span> <span class="hljs-title">Factorial</span><span class="hljs-params">(<span class="hljs-keyword">int</span> n)</span>                  <span class="hljs-comment">//递归函数</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">if</span> (n == <span class="hljs-number">0</span>)                             <span class="hljs-comment">//递归出口</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span>                                    <span class="hljs-comment">//递归调用</span><br>        <span class="hljs-keyword">return</span> n * <span class="hljs-built_in">Factorial</span>(n - <span class="hljs-number">1</span>);<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n) != EOF)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld\n&quot;</span>, <span class="hljs-built_in">Factorial</span>(n));<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h1 id="7-质因数的个数"><a href="#7-质因数的个数" class="headerlink" title="7 质因数的个数"></a>7 质因数的个数</h1><h2 id="题目描述-6"><a href="#题目描述-6" class="headerlink" title="题目描述"></a>题目描述</h2><p>&emsp;&emsp;求正整数N(N&gt;1)的质因数的个数。 相同的质因数需要重复计算。如120=2<em>2</em>2<em>3</em>5，共有5个质因数。</p><h2 id="输入-6"><a href="#输入-6" class="headerlink" title="输入"></a>输入</h2><p>&emsp;&emsp;可能有多组测试数据，每组测试数据的输入是一个正整数N，(1&lt;N&lt;10^9)。</p><h2 id="输出-6"><a href="#输出-6" class="headerlink" title="输出"></a>输出</h2><p>&emsp;&emsp;对于每组数据，输出N的质因数的个数。</p><h2 id="样例输入-6"><a href="#样例输入-6" class="headerlink" title="样例输入"></a>样例输入</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">120<br></code></pre></div></td></tr></table></figure><h2 id="样例输出-6"><a href="#样例输出-6" class="headerlink" title="样例输出"></a>样例输出</h2><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">5<br></code></pre></div></td></tr></table></figure><h2 id="提交网址-6"><a href="#提交网址-6" class="headerlink" title="提交网址"></a>提交网址</h2><p><a href="http://t.cn/Aip7J0Oo">http://t.cn/Aip7J0Oo</a></p><h2 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">while</span>(cin &gt;&gt; n)<br>    &#123;<br>        <span class="hljs-keyword">int</span> i, count = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(i = <span class="hljs-number">2</span>; i &lt;= <span class="hljs-built_in">sqrt</span>(n); i++)<br>        &#123;<br>            <span class="hljs-keyword">while</span>(n % i == <span class="hljs-number">0</span>)<br>            &#123;<br>                count++;<br>                n /= i;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(n &gt; <span class="hljs-number">1</span>)<br>            count++;<br>        cout &lt;&lt; count &lt;&lt; endl;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><figure class="highlight c++"><figcaption><span>C++</span></figcaption><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cstdio&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;vector&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;cmath&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-keyword">const</span> <span class="hljs-keyword">int</span> MAXN = <span class="hljs-number">4e4</span>;<br><br>vector&lt;<span class="hljs-keyword">int</span>&gt; prime;                       <span class="hljs-comment">//保存质数</span><br><span class="hljs-keyword">bool</span> isPrime[MAXN];                  <span class="hljs-comment">//标记数组</span><br><br><span class="hljs-function"><span class="hljs-keyword">void</span> <span class="hljs-title">Initial</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; MAXN; ++i) &#123;<span class="hljs-comment">//初始化</span><br>        isPrime[i] = <span class="hljs-literal">true</span>;<br>    &#125;<br>    isPrime[<span class="hljs-number">0</span>] = <span class="hljs-literal">false</span>;<br>    isPrime[<span class="hljs-number">1</span>] = <span class="hljs-literal">false</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">2</span>; i &lt; MAXN; ++i) &#123;<br>        <span class="hljs-keyword">if</span> (!isPrime[i]) &#123;             <span class="hljs-comment">//非质数则跳过</span><br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        prime.<span class="hljs-built_in">push_back</span>(i);<br>        <span class="hljs-keyword">if</span> (i &gt; MAXN / i) &#123;                     <span class="hljs-comment">//过大的数提前跳出</span><br>            <span class="hljs-keyword">continue</span>;<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = i * i; j &lt; MAXN; j += i) &#123;<br>            isPrime[j] = <span class="hljs-literal">false</span>;        <span class="hljs-comment">//质数的倍数为非质数</span><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> ;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-built_in">Initial</span>();<br>    <span class="hljs-keyword">int</span> n;<br>    <span class="hljs-keyword">while</span> (<span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>, &amp;n) != EOF) &#123;<br>        <span class="hljs-keyword">int</span> answer = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; prime.<span class="hljs-built_in">size</span>() &amp;&amp; prime[i] &lt; n; ++i) &#123;<br>            <span class="hljs-keyword">int</span> factor = prime[i];<br>            <span class="hljs-keyword">while</span> (n % factor == <span class="hljs-number">0</span>) &#123;           <span class="hljs-comment">//不断试除</span><br>                n /= factor;<br>                answer++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span> (n &gt; <span class="hljs-number">1</span>) &#123;                            <span class="hljs-comment">//还存在一个质因数</span><br>            answer++;<br>        &#125;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, answer);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
      <category>考研</category>
      
      <category>编程</category>
      
      <category>复试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>复试</tag>
      
      <tag>机试题库</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Markdown语言使用指南（网转）</title>
    <link href="/2021/04/06/article-000/"/>
    <url>/2021/04/06/article-000/</url>
    
    <content type="html"><![CDATA[<p>Markdown 是一种轻量级的标记语言，其用简单的标记语法便可达到排版的目的，其可以使我们更加专注于内容的编写，而不需过多关注排版。本文主要整理了 Markdown 中的常用的标记语法，以便自己与他人以后查用。</p><h2 id="段落元素"><a href="#段落元素" class="headerlink" title="段落元素"></a>段落元素</h2><h3 id="1、段落与换行"><a href="#1、段落与换行" class="headerlink" title="1、段落与换行"></a>1、段落与换行</h3><p>Markdown 中的段落指连续的一段文字，编写时段落之间用至少一个<strong>空行</strong>隔开，段落内多个空格将被视为一个空格，段首不支持缩进。</p><p>如果想要在显示时显示多个空行，可以插入 <code>&lt;br/&gt;</code> 来实现，注意的是，插入的 <code>&lt;br/&gt;</code> 应与前后的段落中间至少空一行。</p><h3 id="2、标题"><a href="#2、标题" class="headerlink" title="2、标题"></a>2、标题</h3><p>Markdown 支持两种类型的标题。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">//类型 1<br>这是一级标题<br>==========<br>这是二级标题<br>----------<br><br>//类型 2<br><span class="hljs-comment"># 这是一级标题</span><br><span class="hljs-comment">## 这是二级标题</span><br>...<br><span class="hljs-comment">###### 这是六级标题</span><br></code></pre></div></td></tr></table></figure><p>从上面可以看出类型 1 是在标题下面插入 <code>=</code> 或者 <code>-</code> 来标识标题等级，但局限是其只能表示两个级别的标题。</p><p>类型 2 是在标题前面插入 1 - 6 个 # ，表示 6 个等级的标题，这是比较推荐的用法。</p><h3 id="3、引用"><a href="#3、引用" class="headerlink" title="3、引用"></a>3、引用</h3><p>Markdown 中使用 <code>&gt;</code> 来引用。我们可以在一段文字中的每行开头加上 <code>&gt;</code> 来表示一段引用文字，也可以只在一段文字的开头插入一个 <code>&gt;</code> 来表示，如下面的 1、2 两种方式：</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">//方式 1<br>&gt; 这是一句话<br>&gt; 这是第二句话<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><blockquote><p>这是一句话<br>这是第二句话</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">//方式 2<br>&gt; 这是一句话<br>这是第二句话<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><blockquote><p>这是一句话<br>这是第二句话</p></blockquote><p>Markdown 支持使用不同数量的 <code>&gt;</code> 表示嵌套引用。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">&gt; 这是外层的引用<br>&gt; &gt; 这是内层的引用<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><blockquote><p>这是外层的引用</p><blockquote><p>这是内层的引用</p></blockquote></blockquote><h3 id="4、无序列表"><a href="#4、无序列表" class="headerlink" title="4、无序列表"></a>4、无序列表</h3><p>无序列表使用 <code>-</code>、 <code>+</code> 或 <code>*</code> 来作为标记。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">- 第一项<br>- 第二项<br>- 第三项<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><p>上面的 <code>-</code> 可以用 <code>+</code>、 <code>*</code>替换。需要注意的是，<code>-</code> 等符号与后面的文字至少空一格空格。</p><h3 id="5、有序列表"><a href="#5、有序列表" class="headerlink" title="5、有序列表"></a>5、有序列表</h3><p>有序列表使用数字和紧挨着的点号表示。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">1. 第一项<br>2. 第二项<br>3. 第三项<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><p>同无序列表一样，标记符号与后面的文字至少空一格空格。</p><h4 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h4><ul><li><p>有序列表和无序列表的每一项中均可嵌套其他列表；</p></li><li><p>在列表项之间要插入段落时，这时需要将列表项之间的段落缩进 4 个空格；</p></li><li><p>使用 <code>1\. </code> 来输出 <code>1. </code>;</p></li></ul><h3 id="6、代码区块"><a href="#6、代码区块" class="headerlink" title="6、代码区块"></a>6、代码区块</h3><p>缩进 4 个空格，需要注意的是，每行代码都需要至少缩进 4 个空格，不能像段落一样采用首行标记的偷懒写法，一个代码区会一直持续到没有缩进 4 个空格的那一行。</p><p>也可以用一对三个连续的撇号 <code>`</code> 来包裹代码段。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">```<br>code<br>```<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">code<br></code></pre></div></td></tr></table></figure><p>有的解释器还能根据代码的语言从而给代码加上语法高亮。</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">&#96;&#96;&#96;C++<br>include &lt;iostream&gt;<br>using namespace std;<br>int main()<br>&#123;<br>  int a;<br>  cin &lt;&lt; a;<br>  cout &gt;&gt;a;<br>  return 0;<br>&#125;<br>&#96;&#96;&#96;<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><figure class="highlight c++"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs C++">include &lt;iostream&gt;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  <span class="hljs-keyword">int</span> a;<br>  cin &lt;&lt; a;<br>  cout &gt;&gt;a;<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></div></td></tr></table></figure><h3 id="7、分割线"><a href="#7、分割线" class="headerlink" title="7、分割线"></a>7、分割线</h3><p>使用三个及以上的 <code>*</code>、 <code>-</code> 或 <code>_</code>来表示一个分割线，符号不能混用，符号之间可以插入多个空格。需要注意的是，使用 <code>-</code> 来插入分割线时需要与上一个段落至少空一行，否则 Markdown 会将上一行文字解释为二级标题。</p><h3 id="8、表格"><a href="#8、表格" class="headerlink" title="8、表格"></a>8、表格</h3><p>表格是 Markdown 比较复杂的一种表示。</p><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">| 靠左对齐 | 靠右对齐 | 居中对齐 |<br>| :----- | ----: | :----: |<br>| 这是个单元格 | 这是个单元格 | 这是个单元格 |<br>| 单元格 | 单元格 | 单元格 |<br></code></pre></div></td></tr></table></figure><p>上面第二行中的点代表对齐方式，分别是默认（居左）、居中、居右。</p><p>【显示效果】</p><table><thead><tr><th align="left">靠左对齐</th><th align="right">靠右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">这是个单元格</td><td align="right">这是个单元格</td><td align="center">这是个单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table><hr><h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><h3 id="9、超链接"><a href="#9、超链接" class="headerlink" title="9、超链接"></a>9、超链接</h3><p>Markdown 中有三种方式实现超链接。</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">&#x2F;&#x2F;方式 1<br>[百度](http:&#x2F;&#x2F;www.baidu.com)<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><p><a href="http://www.baidu.com/">百度</a></p><p>方式 1 较为常用，也可以为链接的文字加上提示文字，只要在括号中超链接加上空格后添加提示内容即可。</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">[百度](http:&#x2F;&#x2F;www.baidu.com &quot;这是提示文字&quot;)<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><p><a href="http://www.baidu.com/" title="这是提示文字">百度</a></p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">&#x2F;&#x2F;方式 2<br>[百度][1]<br>[1]: http:&#x2F;&#x2F;www.baidu.com<br></code></pre></div></td></tr></table></figure><p>方式 2 由链接文字和链接地址组成，不同的是两者均由 <code>[]</code> 包裹。链接地址的格式为：</p><ul><li>方括号，里面输入链接地址；</li><li>紧接着是一个冒号；</li><li>冒号后面至少一个空格；</li><li>链接地址；</li><li>若有提示文字，空格后用引号或者括号包裹提示文字。</li></ul><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">I get 10 times more traffic from [Google][1] than from [Yahoo][2] or [MSN][3].  <br><br>[1]: http:&#x2F;&#x2F;google.com&#x2F;        &quot;Google&quot; <br>[2]: http:&#x2F;&#x2F;search.yahoo.com&#x2F;  &quot;Yahoo Search&quot; <br>[3]: http:&#x2F;&#x2F;search.msn.com&#x2F;    &quot;MSN Search&quot;<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><p>I get 10 times more traffic from <a href="http://google.com/" title="Google">Google</a> than from <a href="http://search.yahoo.com/" title="Yahoo Search">Yahoo</a> or <a href="http://search.msn.com/" title="MSN Search">MSN</a>.  </p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">&#x2F;&#x2F;方式 3<br>&lt;http:&#x2F;&#x2F;www.baidu.com&gt;<br></code></pre></div></td></tr></table></figure><p>第三种方式是用 <code>&lt;&gt;</code> 来包裹 URL。</p><p>【显示效果】</p><p><a href="http://www.baidu.com/">http://www.baidu.com</a></p><h3 id="10、加粗和斜体"><a href="#10、加粗和斜体" class="headerlink" title="10、加粗和斜体"></a>10、加粗和斜体</h3><p>Markdown 使用 <code>*</code> 和 <code>_</code> 来表示粗体和斜体。</p><figure class="highlight asciidoc"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs asciidoc"><span class="hljs-comment">//加粗</span><br><span class="hljs-strong">**这是加粗文字**</span><br><span class="hljs-emphasis">__这也是加粗文字__</span><br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><p><strong>这是加粗文字</strong><br><strong>这也是加粗文字</strong></p><figure class="highlight haxe"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs haxe"><span class="hljs-comment">//斜体</span><br>*这是斜体文字*<br><span class="hljs-literal">_</span>这也是斜体文字<span class="hljs-literal">_</span><br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><p><em>这是斜体文字</em><br><em>这也是斜体文字</em></p><p>被偶数个 <code>*</code> 或 <code>_</code> 包裹的文字显示加粗效果，被奇数个包裹的为倾斜效果。</p><p>需要注意的是，<code>*</code> 和 <code>-</code> 要成对出现，不能混合使用，也不能只出现一个。同时，标识符号要与标识的文字紧挨着，符号与符号之间、符号文字之间不能有任何空格。</p><h3 id="11、代码"><a href="#11、代码" class="headerlink" title="11、代码"></a>11、代码</h3><p>使用 <code>`</code> (撇号) 来包裹一小段代码。</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">&#96;Hello world.&#96;<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><p><code>Hello world.</code></p><p>若想在代码中添加撇号，可以使用多个撇号包裹里面需要添加的撇号，但注意里面的连续的撇号数量不能超过外面的数量。</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">&#x2F;&#x2F;显示一个撇号<br>&#96;&#96; &#96; &#96;&#96;<br>&#x2F;&#x2F;显示两个撇号<br>&#96;&#96;&#96; &#96;&#96;  &#96;&#96;&#96;<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><p>显示一个撇号<br><code>`</code><br>显示两个撇号<br><code>`` </code></p><h3 id="12、图片"><a href="#12、图片" class="headerlink" title="12、图片"></a>12、图片</h3><p>图片的插入方式跟超链接前两种插入方式类似。</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">&#x2F;&#x2F;方式 1<br>![如果图片不能显示，就显示这段文字](图片 url)<br><br>&#x2F;&#x2F;方式 2<br>![如果图片不能显示，就显示这段文字][Image-url]<br>[Image-url]: 图片url &quot;这是提示文字&quot;<br></code></pre></div></td></tr></table></figure><h2 id="反斜杠"><a href="#反斜杠" class="headerlink" title="反斜杠 \"></a>反斜杠 <code>\</code></h2><p>我们经常需要在文章中插入一些特殊符号，而这些符号恰好是前面所讲的标识符号，可以在特殊符号前插入 <code>\</code> 来直接显示符号，而不让 Markdown 来将其解释为标识符号。</p><p>Markdown 支持以下这些符号前插入 <code>\</code> 而显示其本来样子：</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">\\    反斜线<br>\&#96;    反引号<br>\*    星号<br>\_    底线<br>\&#123;&#125;   花括号<br>\[]   方括号<br>\()   括弧<br>\#    井字号<br>\+    加号<br>\-    减号<br>\.    英文句点<br>\!    惊叹号<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><p>\    反斜线<br>`    反引号<br>*    星号<br>_    底线<br>{}   花括号<br>[]   方括号<br>()   括弧<br>#    井字号<br>+    加号<br>-    减号<br>.    英文句点<br>!    惊叹号</p><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p>其实，市场上有很多的 Markdown 解释器，它们大都能支持上面所讲的语法，但呈现出的样式往往不一。另外，不同的解释器还能支持其他自己定义的语法，比如 Github 还能支持 emoji。下面再着重介绍 Github 支持的几个 Markdown 语法。不过需要注意的是，有些语法只能在 issue 或者 pull request 上使用，这个在后面讲每个语法时会标记（约定：“通用”表示在 Github 任何地方可以使用的语法，“特殊”表示只能在 issue 或者 pull request 上使用）。</p><h3 id="语法高亮-通用"><a href="#语法高亮-通用" class="headerlink" title="语法高亮(通用)"></a>语法高亮(通用)</h3><p>上面说过，有的解释器是能够显示语法高亮的，Github 就可以。</p><h3 id="任务列表（通用）"><a href="#任务列表（通用）" class="headerlink" title="任务列表（通用）"></a>任务列表（通用）</h3><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">- [ ] task one<br>- [x] task two<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><ul><li><input disabled="" type="checkbox"> task one</li><li><input checked="" disabled="" type="checkbox"> task two</li></ul><p>用法跟普通列表的用法差不多，只不过在每一项文字前面加了 <code>[ ]</code> 或者 <code>[x]</code>。<code>[ ]</code> 中间有且只有一个空格，表示未完成，另一个表示已完成。</p><h3 id="表格（通用）"><a href="#表格（通用）" class="headerlink" title="表格（通用）"></a>表格（通用）</h3><p>Github 支持更简单的 table 语法。</p><figure class="highlight plain"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs Undefined">First Header | Second Header<br>------------ | -------------<br>Content from cell 1 | Content from cell 2<br>Content in the first column | Content in the second column<br></code></pre></div></td></tr></table></figure><p>【显示效果】</p><table><thead><tr><th>First Header</th><th>Second Header</th></tr></thead><tbody><tr><td>Content from cell 1</td><td>Content from cell 2</td></tr><tr><td>Content in the first column</td><td>Content in the second column</td></tr></tbody></table><p>表头与项用一排 <code>-</code> 分隔开，每一列用 <code>|</code> 分隔开。</p><h3 id="SHA-引用（特殊）"><a href="#SHA-引用（特殊）" class="headerlink" title="SHA 引用（特殊）"></a>SHA 引用（特殊）</h3><p>每一次 commit 都会产生一个 id，用 <code>@id</code> 的方式可以链接到某个项目的特定的 commit。比如用 <code>jquery/jquery@1b9575b9d14399e9426b9eacdd92b3717846c3f2</code> 就能链接到 jquery 的一次 commit 记录上。</p><h3 id="issue-引用（特殊）"><a href="#issue-引用（特殊）" class="headerlink" title="issue 引用（特殊）"></a>issue 引用（特殊）</h3><p>用 <code>#1</code> 来引用当前 repo 的第一个 issue，也可以用 <code>jquery/jquery#1</code> 引用 jquery 的第一次 issue。</p><h3 id="（特殊）"><a href="#（特殊）" class="headerlink" title="@（特殊）"></a>@（特殊）</h3><p>用 <code>@</code> 来提醒目标用户。比如 <code>@CompileYouth</code> 可以 @ 到我。</p><h3 id="删除符号（通用）"><a href="#删除符号（通用）" class="headerlink" title="删除符号（通用）"></a>删除符号（通用）</h3><p>用连续两个 <code>~</code> 包围的词会被加上删除符。比如 <code>~~This is removed~~</code>。</p><p>【显示效果】</p><p><del>This is removed</del></p><h3 id="Emoji（通用）"><a href="#Emoji（通用）" class="headerlink" title="Emoji（通用）"></a>Emoji（通用）</h3><p>Github 比较有意思的是可以支持 emoji。比如 <code>:smile:</code> 表示笑脸等等，具体可以查看 <a href="http://www.webpagefx.com/tools/emoji-cheat-sheet/">Emoji Cheat Sheet</a></p><p>详细信息可以查看<a href="https://guides.github.com/features/mastering-markdown/">官方文档</a>。最后 po 两张 Github 官方推荐的 Markdown Cheat Sheet：<a href="./github-markdown-cheatsheet0.jpg">通用语法</a>，<a href="./github-markdown-cheatsheet1.jpg">Github 支持语法</a></p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>Windows 环境下，推荐 <a href="https://www.typora.io/">Typora</a>、<a href="http://markdownpad.com/">Markdownpad</a>（自带图床功能）</li><li>Mac 环境下，推荐 Typora、<a href="http://25.io/mou/">Mou</a></li><li>笔记软件： 为知笔记较好的支持 markdown，且支持 Windows、Mac、web、ios、android 等各个平台</li><li>当然，还有 Github</li></ul><h2 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h2><p>Markdown 文件的编辑在不同编辑器中有不一样的表现，我主要介绍一下在 Atom 中使用 Markdown 的情况。</p><p>Atom 官方自带了一个插件，叫 <a href="https://atom.io/packages/markdown-preview">markdown-preview</a>，可以在 Atom 中进行预览。当然，Atom 还有很多第三方的 Markdown 插件，我使用的是 <a href="https://atom.io/packages/markdown-writer">markdown-writer</a>，可以使我更方便地编辑 Markdown 文件，当然你可以根据自己的需要下载插件。</p><p>在 Atom 中，其他的使用方式就不赘述了，唯一需要提一下的是插入 table。在 Markdown 中插入 table 是一件比较麻烦的事情，而在 Atom 中，可以简化操作，就是直接输入 <code>table</code> 然后按 Enter 键，编辑器便会自动生成 table 的模板，比自己手写便捷多了。</p><p>拓展阅读：</p><ol><li><a href="http://wowubuntu.com/markdown/">Markdown 语法说明</a></li></ol>]]></content>
    
    
    <categories>
      
      <category>学习</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My First Post</title>
    <link href="/2021/04/06/article-001/"/>
    <url>/2021/04/06/article-001/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>undefined</category>
      
    </categories>
    
    
    <tags>
      
      <tag>undefined</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/04/06/hello-world/"/>
    <url>/2021/04/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo server<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo generate<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter hljs"><div class="hljs code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><div class="hljs code-wrapper"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></div></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>undefined</category>
      
    </categories>
    
    
    <tags>
      
      <tag>undefined</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>test</title>
    <link href="/1999/12/31/test/"/>
    <url>/1999/12/31/test/</url>
    
    <content type="html"><![CDATA[<p>这是使用 GitHub Actions 自动部署的。<br>具体操作方法可参考以下链接：<br><a href="https://www.bilibili.com/video/BV1XV411r7TG">https://www.bilibili.com/video/BV1XV411r7TG</a></p><h2 id="2021-04-26-updated"><a href="#2021-04-26-updated" class="headerlink" title="2021-04-26 updated"></a>2021-04-26 updated</h2><p>更新留言区<br>可以在留言区留言</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
